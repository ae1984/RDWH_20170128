create materialized view U1.M_KASPIKZ_PAY_INFO_PARAMS
build deferred
refresh complete on demand
as
select xx.pay_info_id,                  --operation of payments
       xx.tp_user_id,                   --current user
       xx.reg_date,                     --дата регистрации пользователя
       xx.user_access_type,             --product/wallet
       xx.pay_date,                     --время платежа
       xx.time_from_reg,                --время с регистрации до операции
       xx.service_categ_name,           --услуга
       xx.service_code,                 --партнер по услугам
       xx.pay_amount,                   --сумма платежа/операции
       xx.pay_bonus_amount,             --сумма бонуса использованная для платежа
       xx.login_val,                    --current login
       xx.pay_service_param,
       xx.pay_object,
       --
       xx.user_oper_num,                --какая по счету операция у пользователя
       max(cnt_login8_pre) over (partition by substr(login_val,-10,8) order by pay_date range unbounded preceding) as cnt_login8,  --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       max(cnt_login7_pre) over (partition by substr(login_val,-10,7) order by pay_date range unbounded preceding) as cnt_login7,     --кол-во похожих номеров (для несанкц регистрации) 7 первых цифр
       max(cnt_login6_pre) over (partition by substr(login_val,-10,6) order by pay_date range unbounded preceding) as cnt_login6,     --кол-во похожих номеров (для несанкц регистрации) 6 первых цифр
       xx.same_service_cnt,             --кол-во одинаковых платежей у 1 пользователя
       xx.same_payment_other,           --кол-во одинаковых платежей у всех юзеров
       count(case when same_payment_user_pre = 1 then tp_user_id end) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range unbounded preceding) as same_payment_user, --кол-во уникальных юзеров по одинаковым платежам
       xx.sum_payment_other,            --сумма одинаковых платежей у всех юзеров
       --
       xx.user_oper_num_1day,           --какая по счету операция у пользователя
       count(case when cnt_login_1day_pre = 1 then login_val end) over (partition by substr(login_val,-10,8)
                          order by pay_date range between interval '24' hour preceding and current row) as cnt_login8_1day,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_1day_pre = 1 then login_val end) over (partition by substr(login_val,-10,7)
                          order by pay_date range between interval '24' hour preceding and current row) as cnt_login7_1day,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_1day_pre = 1 then login_val end) over (partition by substr(login_val,-10,6)
                          order by pay_date range between interval '24' hour preceding and current row) as cnt_login6_1day,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       xx.same_service_cnt_1day,        --кол-во одинаковых платежей у 1 пользователя
       count(case when same_payment_other_1day_pre = 1 then tp_user_id end) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '24' hour preceding and current row) as same_payment_other_1day, --кол-во уникальных юзеров по одинаковым платежам
       xx.same_payment_user_1day,       --кол-во одинаковых платежей  у всех юзеров
       xx.sum_payment_other_1day,       --сумма одинаковых платежей у всех юзеров
       --
       xx.user_oper_num_7day,           --какая по счету операция у пользователя
       count(case when cnt_login_7day_pre = 1 then login_val end) over (partition by substr(login_val,-10,8)
                          order by pay_date range between interval '7' day preceding and current row) as cnt_login8_7day,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_7day_pre = 1 then login_val end) over (partition by substr(login_val,-10,7)
                          order by pay_date range between interval '7' day preceding and current row) as cnt_login7_7day,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_7day_pre = 1 then login_val end) over (partition by substr(login_val,-10,6)
                          order by pay_date range between interval '7' day preceding and current row) as cnt_login6_7day,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       xx.same_service_cnt_7day,        --кол-во одинаковых платежей у 1 пользователя
       count(case when same_payment_other_7day_pre = 1 then tp_user_id end) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '7' day preceding and current row) as same_payment_other_7day, --кол-во уникальных юзеров по одинаковым платежам
       xx.same_payment_user_7day,       --кол-во одинаковых платежей  у всех юзеров
       xx.sum_payment_other_7day,       --сумма одинаковых платежей у всех юзеров
       --
       xx.user_oper_num_1month,           --какая по счету операция у пользователя
       count(case when cnt_login_1month_pre = 1 then login_val end) over (partition by substr(login_val,-10,8)
                          order by pay_date range between interval '1' month preceding and current row) as cnt_login8_1month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_1month_pre = 1 then login_val end) over (partition by substr(login_val,-10,7)
                          order by pay_date range between interval '1' month preceding and current row) as cnt_login7_1month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_1month_pre = 1 then login_val end) over (partition by substr(login_val,-10,6)
                          order by pay_date range between interval '1' month preceding and current row) as cnt_login6_1month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       xx.same_service_cnt_1month,        --кол-во одинаковых платежей у 1 пользователя
       count(case when same_payment_other_1month_pre = 1 then tp_user_id end) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '1' month preceding and current row) as same_payment_other_1month, --кол-во уникальных юзеров по одинаковым платежам
       xx.same_payment_user_1month,       --кол-во одинаковых платежей  у всех юзеров
       xx.sum_payment_other_1month,       --сумма одинаковых платежей у всех юзеров
       --
       xx.user_oper_num_3month,           --какая по счету операция у пользователя
       count(case when cnt_login_3month_pre = 1 then login_val end) over (partition by substr(login_val,-10,8)
                          order by pay_date range between interval '3' month preceding and current row) as cnt_login8_3month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_3month_pre = 1 then login_val end) over (partition by substr(login_val,-10,7)
                          order by pay_date range between interval '3' month preceding and current row) as cnt_login7_3month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_3month_pre = 1 then login_val end) over (partition by substr(login_val,-10,6)
                          order by pay_date range between interval '3' month preceding and current row) as cnt_login6_3month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       xx.same_service_cnt_3month,        --кол-во одинаковых платежей у 1 пользователя
       count(case when same_payment_other_3month_pre = 1 then tp_user_id end) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '3' month preceding and current row) as same_payment_other_3month, --кол-во уникальных юзеров по одинаковым платежам
       xx.same_payment_user_3month,       --кол-во одинаковых платежей  у всех юзеров
       xx.sum_payment_other_3month,       --сумма одинаковых платежей у всех юзеров
       --
       xx.user_oper_num_6month,           --какая по счету операция у пользователя
       count(case when cnt_login_6month_pre = 1 then login_val end) over (partition by substr(login_val,-10,8)
                          order by pay_date range between interval '6' month preceding and current row) as cnt_login8_6month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_6month_pre = 1 then login_val end) over (partition by substr(login_val,-10,7)
                          order by pay_date range between interval '6' month preceding and current row) as cnt_login7_6month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(case when cnt_login_6month_pre = 1 then login_val end) over (partition by substr(login_val,-10,6)
                          order by pay_date range between interval '6' month preceding and current row) as cnt_login6_6month,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       xx.same_service_cnt_6month,        --кол-во одинаковых платежей у 1 пользователя
       count(case when same_payment_other_6month_pre = 1 then tp_user_id end) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '6' month preceding and current row) as same_payment_other_6month, --кол-во уникальных юзеров по одинаковым платежам
       xx.same_payment_user_6month,       --кол-во одинаковых платежей  у всех юзеров
       xx.sum_payment_other_6month        --сумма одинаковых платежей у всех юзеров
       --
  from (
select /*+ parallel(30)*/
       x.pay_info_id,               --operation of payments
       x.tp_user_id,                         --current user
       x.reg_date,
       x.user_access_type,                  --product/wallet
       x.pay_date,
       x.time_from_reg, --время с регистрации до операции
       x.service_categ_name,        --услуга
       x.service_code,              --партнер по услугам
       x.pay_amount,                 --сумма платежа/операции
       x.pay_bonus_amount,     --сумма бонуса использованная для платежа
       x.login_val,                              --current login
       x.pay_service_param,
       x.pay_object,
       --
       dense_rank() over(partition by tp_user_id order by pay_date) as user_oper_num,                --какая по счету операция у пользователя
       dense_rank() over(partition by substr(login_val,-10,8) order by tp_user_id) as cnt_login8_pre,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       dense_rank() over(partition by substr(login_val,-10,7) order by tp_user_id) as cnt_login7_pre,     --кол-во похожих номеров (для несанкц регистрации) 7 первых цифр
       dense_rank() over(partition by substr(login_val,-10,6) order by tp_user_id) as cnt_login6_pre,     --кол-во похожих номеров (для несанкц регистрации) 6 первых цифр
       count(pay_info_id) over(partition by tp_user_id, upper(service_categ_name||service_code||pay_service_param||pay_object) order by pay_info_id) as same_service_cnt,     --кол-во одинаковых платежей у 1 пользователя
       count(pay_info_id) over(partition by upper(service_categ_name||service_code||pay_service_param||pay_object) order by pay_info_id) as same_payment_other,              --кол-во одинаковых платежей у всех юзеров
       count(tp_user_id)  over (partition by tp_user_id, upper(service_categ_name||service_code||pay_service_param||pay_object)
                                order by pay_date range unbounded preceding)    as same_payment_user_pre,                                                                     --кол-во уникальных юзеров по одинаковым платежам
       sum(nvl(pay_amount,0)) over(partition by upper(service_categ_name||service_code||pay_service_param||pay_object) order by pay_info_id) as sum_payment_other,            ----сумма одинаковых платежей у всех юзеров
       --
       count(pay_info_id) over (partition by tp_user_id order by pay_date range between interval '24' hour preceding and current row) as user_oper_num_1day,       --какая по счету операция у пользователя
       count(login_val)   over (partition by login_val  order by pay_date range between interval '24' hour preceding and current row) as cnt_login_1day_pre,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(pay_info_id) over (partition by tp_user_id,upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '24' hour preceding and current row) as same_service_cnt_1day,     --кол-во одинаковых платежей у 1 пользователя
       count(tp_user_id)  over (partition by tp_user_id, upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '24' hour preceding and current row) as same_payment_other_1day_pre, --кол-во уникальных юзеров по одинаковым платежам
       count(pay_info_id) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '24' hour preceding and current row) as same_payment_user_1day,       --кол-во одинаковых платежей  у всех юзеров
       sum(nvl(pay_amount,0)) over(partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                              order by pay_date range between interval '24' hour preceding and current row) as sum_payment_other_1day,    ----сумма одинаковых платежей у всех юзеров
       --
       count(pay_info_id) over (partition by tp_user_id order by pay_date range between interval '7' day preceding and current row) as user_oper_num_7day,       --какая по счету операция у пользователя
       count(login_val)   over (partition by login_val  order by pay_date range between interval '7' day preceding and current row) as cnt_login_7day_pre,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(pay_info_id) over (partition by tp_user_id,upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '7' day preceding and current row) as same_service_cnt_7day,     --кол-во одинаковых платежей у 1 пользователя
       count(tp_user_id)  over (partition by tp_user_id, upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '7' day preceding and current row) as same_payment_other_7day_pre, --кол-во уникальных юзеров по одинаковым платежам
       count(pay_info_id) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '7' day preceding and current row) as same_payment_user_7day,       --кол-во одинаковых платежей  у всех юзеров
       sum(nvl(pay_amount,0)) over(partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                              order by pay_date range between interval '7' day preceding and current row) as sum_payment_other_7day,    ----сумма одинаковых платежей у всех юзеров
       --
       count(pay_info_id) over (partition by tp_user_id order by pay_date range between interval '1' month preceding and current row) as user_oper_num_1month,       --какая по счету операция у пользователя
       count(login_val)   over (partition by login_val  order by pay_date range between interval '1' month preceding and current row) as cnt_login_1month_pre,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(pay_info_id) over (partition by tp_user_id,upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '1' month preceding and current row) as same_service_cnt_1month,     --кол-во одинаковых платежей у 1 пользователя
       count(tp_user_id)  over (partition by tp_user_id, upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '1' month preceding and current row) as same_payment_other_1month_pre, --кол-во уникальных юзеров по одинаковым платежам
       count(pay_info_id) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '1' month preceding and current row) as same_payment_user_1month,       --кол-во одинаковых платежей  у всех юзеров
       sum(nvl(pay_amount,0)) over(partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                              order by pay_date range between interval '1' month preceding and current row) as sum_payment_other_1month,    ----сумма одинаковых платежей у всех юзеров
       --
       count(pay_info_id) over (partition by tp_user_id order by pay_date range between interval '3' month preceding and current row) as user_oper_num_3month,       --какая по счету операция у пользователя
       count(login_val)   over (partition by login_val  order by pay_date range between interval '3' month preceding and current row) as cnt_login_3month_pre,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(pay_info_id) over (partition by tp_user_id,upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '3' month preceding and current row) as same_service_cnt_3month,     --кол-во одинаковых платежей у 1 пользователя
       count(tp_user_id)  over (partition by tp_user_id, upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '3' month preceding and current row) as same_payment_other_3month_pre, --кол-во уникальных юзеров по одинаковым платежам
       count(pay_info_id) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '3' month preceding and current row) as same_payment_user_3month,       --кол-во одинаковых платежей  у всех юзеров
       sum(nvl(pay_amount,0)) over(partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                              order by pay_date range between interval '3' month preceding and current row) as sum_payment_other_3month,    ----сумма одинаковых платежей у всех юзеров
       --
       count(pay_info_id) over (partition by tp_user_id order by pay_date range between interval '6' month preceding and current row) as user_oper_num_6month,       --какая по счету операция у пользователя
       count(login_val)   over (partition by login_val  order by pay_date range between interval '6' month preceding and current row) as cnt_login_6month_pre,     --кол-во похожих номеров (для несанкц регистрации) 8 первых цифр
       count(pay_info_id) over (partition by tp_user_id,upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '6' month preceding and current row) as same_service_cnt_6month,     --кол-во одинаковых платежей у 1 пользователя
       count(tp_user_id)  over (partition by tp_user_id, upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '6' month preceding and current row) as same_payment_other_6month_pre, --кол-во уникальных юзеров по одинаковым платежам
       count(pay_info_id) over (partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                          order by pay_date range between interval '6' month preceding and current row) as same_payment_user_6month,       --кол-во одинаковых платежей  у всех юзеров
       sum(nvl(pay_amount,0)) over(partition by upper(service_categ_name||service_code||pay_service_param||pay_object)
                              order by pay_date range between interval '6' month preceding and current row) as sum_payment_other_6month    ----сумма одинаковых платежей у всех юзеров
       --
  from ( select distinct kp.pay_info_id,               --operation of payments
                 kp.user_id as tp_user_id,                         --current user
                 u.reg_date,
                 u.user_access_type,                  --product/wallet
                 kp.pay_date as pay_date,
                 u.reg_date - kp.pay_date as time_from_reg, --время с регистрации до операции
                 kp.category_name as service_categ_name,        --услуга
                 kp.service_name  as service_code,              --партнер по услугам
                 kp.pay_amount,                                 --сумма платежа/операции
                 kp.pay_bonus_amount,                           --сумма бонуса использованная для платежа
                 nvl(l.login_val_next,substr(l.login_val_prev,-10,10)) as login_val,                              --current login
                 kp.pay_service_param,
                 kp.pay_param_clear  as pay_object
          from M_KASPIKZ_PAY      kp
          join u1.M_KASPIKZ_USERS  u  on u.id = kp.user_id
          join u1.M_KASPIKZ_LOGINS l  on l.user_id = u.id
         where kp.is_prov = 1
       ) x
  ) xx;
grant select on U1.M_KASPIKZ_PAY_INFO_PARAMS to LOADDB;


