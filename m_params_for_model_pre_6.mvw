create materialized view U1.M_PARAMS_FOR_MODEL_PRE_6
build deferred
refresh force on demand
as
select  /*+parallel(5)*/
        cln.rfo_client_id
       ,cln.app_id
       ,cln.folder_date_create_mi
       ,cln.phone_mobile

       ,min(term.document_date)  as DAYS_FROM_FIRST_MOB_PAY_TERM
       ,count(distinct case when term.document_date>=trunc(cln.folder_date_create_mi)-180 then term.acash_doc_id end) as PMT_QTY_TERM
       ,count(distinct term.cash_reg_code) as UNIQUE_TERMINAL_QTY
       ,sum(term.amount) as TTL_PMT_AMT_TERM
       ,count(distinct term.acash_doc_id) as CNT_PMT_TERM


        --end as SHARE_OF_KASPIKZ_PMT
       --,sum(nvl(kpay.pay_amount,0))+sum(nvl(term.amount,0)) as TTL_PMT_AMT
       /*,case when avg(kpay.pay_amount) is null or avg(term.amount) is null
             then (avg(nvl(kpay.pay_amount,0))+avg(nvl(term.amount,0)))
             else (avg(nvl(kpay.pay_amount,0))+avg(nvl(term.amount,0)))/2
        end as AVG_PMT*/

from M_PARAMS_FOR_MODEL_PRE_0 cln--V_CLIENT_RFO_BY_ID cln
left join M_CASH_TERMINAL term on term.nasn_pay=substr(trim(cln.phone_mobile),2,10) and term.prov_date is not null
                                  and term.document_date<trunc(cln.folder_date_create_mi)
                                  and term.document_date>=trunc(cln.folder_date_create_mi)-180
where cln.folder_date_create_mi >= to_date('01.01.2015','dd.mm.yyyy')
group by cln.rfo_client_id,cln.app_id,cln.folder_date_create_mi
        ,cln.phone_mobile;
grant select on U1.M_PARAMS_FOR_MODEL_PRE_6 to LOADDB;


