create materialized view U1.V_RDBOARD_FLD_DAY
build deferred
refresh complete on demand
as
with days as ( -- средние значения с учетом текущего дня недели за 4 месяца
               -- основное назначение - вычисление rise_coefficient для расчетов и визуализации
  select /*+parallel(2)*/ tt.yyyy_mm_dd, tt.day_num_of_week
    from V_TIME_DAYS tt
   where ((tt.yyyy_mm_dd >=
         add_months(trunc(decode(trunc(sysdate),
                                   (select h.data
                                      from T_HOLIDAYS h
                                     where trunc(h.data) = trunc(sysdate)
                                       and upper(trim(to_char(h.data, 'Day'))) not in
                                           ('SUNDAY', 'SATURDAY')),
                                   (SELECT NEXT_DAY(trunc(sysdate - 7), 'sun')
                                      FROM DUAL),
                                   sysdate)),
                      -5) and
         tt.yyyy_mm_dd <
         trunc(decode(trunc(sysdate),
                        (select h.data
                           from T_HOLIDAYS h
                          where trunc(h.data) = trunc(sysdate)
                            and upper(trim(to_char(h.data, 'Day'))) not in
                                ('SUNDAY', 'SATURDAY')),
                        (SELECT NEXT_DAY(trunc(sysdate - 7), 'sun') FROM DUAL),
                        sysdate))) or
         (tt.yyyy_mm_dd >=
         add_months(trunc(decode(trunc(sysdate),
                                   (select h.data
                                      from T_HOLIDAYS h
                                     where trunc(h.data) = trunc(sysdate)
                                       and upper(trim(to_char(h.data, 'Day'))) not in
                                           ('SUNDAY', 'SATURDAY')),
                                   (SELECT NEXT_DAY(trunc(sysdate - 7), 'sun')
                                      FROM DUAL),
                                   sysdate)),
                      -12.5) and
         tt.yyyy_mm_dd <
         add_months(trunc(decode(trunc(sysdate),
                                   (select h.data
                                      from T_HOLIDAYS h
                                     where trunc(h.data) = trunc(sysdate)
                                       and upper(trim(to_char(h.data, 'Day'))) not in
                                           ('SUNDAY', 'SATURDAY')),
                                   (SELECT NEXT_DAY(trunc(sysdate - 7), 'sun')
                                      FROM DUAL),
                                   sysdate)),
                      -11.5)))
     and tt.day_num_of_week =
         (select t.day_num_of_week
            from V_TIME_DAYS t
           where t.yyyy_mm_dd =
                 trunc(decode(trunc(sysdate),
                              (select h.data
                                 from T_HOLIDAYS h
                                where trunc(h.data) = trunc(sysdate)
                                  and upper(trim(to_char(h.data, 'Day'))) not in
                                      ('SUNDAY', 'SATURDAY')),
                              (SELECT NEXT_DAY(trunc(sysdate - 7), 'sun')
                                 FROM DUAL),
                              sysdate)))
     and tt.month_num_of_year != 12
/*  select tt.yyyy_mm_dd, tt.day_num_of_week from V_TIME_DAYS tt
  where ((tt.yyyy_mm_dd >= add_months(trunc(sysdate), -5) and
                tt.yyyy_mm_dd < trunc(sysdate)) or
        (tt.yyyy_mm_dd >= add_months(trunc(sysdate), -12.5) and
                tt.yyyy_mm_dd < add_months(trunc(sysdate), -11.5))) and
        tt.day_num_of_week = (select t.day_num_of_week from V_TIME_DAYS t
                               where t.yyyy_mm_dd = trunc(sysdate)) and
        tt.month_num_of_year != 12*/
/* where tt.yyyy_mm_dd >= add_months(trunc(to_date('2013-10-21','yyyy-mm-dd')), -4) and
        tt.yyyy_mm_dd < trunc(to_date('2013-10-21','yyyy-mm-dd')) and
--        tt.yyyy_mm_dd < add_months(trunc(sysdate), -9) and
        tt.day_num_of_week = (select t.day_num_of_week from V_TIME_DAYS t
                               where t.yyyy_mm_dd = trunc(to_date('2013-10-21','yyyy-mm-dd'))) */
)
select /*+parallel(2)*/ z.*, case when fld_cnt_mov_avg_med_5_prev > 0 then
              fld_cnt_mov_avg_med_5 / fld_cnt_mov_avg_med_5_prev else 1 end as rise_coefficient
from (
select y.text_hh_mi,
       y.day_num_of_week,
       y.fld_cnt_avg,
       y.fld_cnt_med,
       avg(y.fld_cnt_avg) over (partition by null order by y.text_hh_mi
                    rows between 4 preceding and 4 following) as fld_cnt_mov_avg_avg_5, -- moving average of 9 avg rows
       avg(y.fld_cnt_avg) over (partition by null order by y.text_hh_mi
                    rows between 5 preceding and 3 following) as fld_cnt_mov_avg_avg_5_prev, -- previous moving average
       avg(y.fld_cnt_med) over (partition by null order by y.text_hh_mi
                    rows between 4 preceding and 4 following) as fld_cnt_mov_avg_med_5, -- moving average of 9 median rows
       avg(y.fld_cnt_med) over (partition by null order by y.text_hh_mi
                    rows between 5 preceding and 3 following) as fld_cnt_mov_avg_med_5_prev -- previous moving average
from (
  select x.text_hh_mi,
         avg(x.day_num_of_week) as day_num_of_week,
         avg(x.fld_cnt) as fld_cnt_avg,
         median(x.fld_cnt) as fld_cnt_med
  from (
    select tm.yyyy_mm_dd, tm.text_hh_mi,
           avg(d.day_num_of_week) as day_num_of_week,
           count(f.id)*0.97 as fld_cnt  ------*0.96 - временно, для корректровки истории, позже заменим на продажи
    from V_TIME_MINUTES tm
    join days d on d.yyyy_mm_dd = tm.yyyy_mm_dd
    left join V_RFO_Z#CM_CHECKPOINT f on trunc(f.c_date_create,'mi') = tm.yyyy_mm_dd_hh_mi and
         f.C_CREATE_USER not in (1381958681, 305437784, 13731870)
    where to_number(to_char(tm.yyyy_mm_dd_hh_mi,'hh24mi')) >= 845 and
          to_number(to_char(tm.yyyy_mm_dd_hh_mi,'hh24mi')) <= 2200
    group by tm.yyyy_mm_dd, tm.text_hh_mi
  ) x group by x.text_hh_mi
) y
) z;
grant select on U1.V_RDBOARD_FLD_DAY to LOADDB;


