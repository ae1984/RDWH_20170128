create materialized view U1.V_TMP_JAN_D_ALL_2
refresh force on demand
as
select
    yms,
    round(sum(delinq_rate * max_debt_used) / sum(max_debt_used),1) as del_rate,
    round(sum(delinq_rate_pmt_1 * max_debt_used) / sum(max_debt_used),1) as del_rate_pmt_1,
    round(sum(max_debt_used) / 1000000, 1) as sales_mln,
    count(*) as con_cnt, count(distinct contract_id) as con_dist_cnt
from (
select c.* from V_TMP_CONTRACT_CAL_DEL c
join V_FOLDER_PHONE_CALC fpc on fpc.folder_id = c.folder_id_first
join V_TMP_JAN_D_hs_1 a on a.ord_bad = fpc.ph_home_same_order and
                         a.age_max_bad >= fpc.ph_home_same_age
where (c.yms like '2013 - %' or c.yms like '2014 - %')
union
select c.* from V_TMP_CONTRACT_CAL_DEL c
join V_FOLDER_PHONE_CALC fpc on fpc.folder_id = c.folder_id_first
join V_TMP_JAN_D_ms_1 a on a.ord_bad = fpc.ph_mobile_same_order and
                         a.age_max_bad >= fpc.ph_mobile_same_age
where (c.yms like '2013 - %' or c.yms like '2014 - %')
union
select c.* from V_TMP_CONTRACT_CAL_DEL c
join V_FOLDER_PHONE_CALC fpc on fpc.folder_id = c.folder_id_first
join V_TMP_JAN_D_cs_1 a on a.ord_bad = fpc.ph_contact_same_order_avg and
                         a.age_max_bad >= fpc.ph_contact_same_age_avg
where (c.yms like '2013 - %' or c.yms like '2014 - %')
union
select c.* from V_TMP_CONTRACT_CAL_DEL c
join V_FOLDER_PHONE_CALC fpc on fpc.folder_id = c.folder_id_first
join V_TMP_JAN_D_ha_1 a on a.ord_bad = fpc.ph_home_all_order and
                         a.age_max_bad >= fpc.ph_home_all_age
where (c.yms like '2013 - %' or c.yms like '2014 - %')
union
select c.* from V_TMP_CONTRACT_CAL_DEL c
join V_FOLDER_PHONE_CALC fpc on fpc.folder_id = c.folder_id_first
join V_TMP_JAN_D_ma_1 a on a.ord_bad = fpc.ph_mobile_all_order and
                         a.age_max_bad >= fpc.ph_mobile_all_age
where (c.yms like '2013 - %' or c.yms like '2014 - %')
union
select c.* from V_TMP_CONTRACT_CAL_DEL c
join V_FOLDER_PHONE_CALC fpc on fpc.folder_id = c.folder_id_first
join V_TMP_JAN_D_ca_1 a on a.ord_bad = fpc.ph_contact_all_order_avg and
                         a.age_max_bad >= fpc.ph_contact_all_age_avg
where (c.yms like '2013 - %' or c.yms like '2014 - %')
) w1
group by yms having sum(max_debt_used) > 0;
grant select on U1.V_TMP_JAN_D_ALL_2 to LOADDB;
grant select on U1.V_TMP_JAN_D_ALL_2 to LOADER;


