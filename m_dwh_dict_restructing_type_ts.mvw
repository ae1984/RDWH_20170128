create materialized view U1.M_DWH_DICT_RESTRUCTING_TYPE_TS
refresh complete on demand
as
select DRT.RESTRUCTING_TYPE_CD RESTRUCTING_TYPE_CD,
       DRT.RESTRUCTING_TYPE$CHANGE_DATE RESTRUCTING_TYPE$CHANGE_DATE,
       DRT.RESTRUCTING_TYPE$ROW_STATUS RESTRUCTING_TYPE$ROW_STATUS,
       DRT.RESTRUCTING_TYPE$AUDIT_ID RESTRUCTING_TYPE$AUDIT_ID,
       DRT.RESTRUCTING_TYPE$HASH RESTRUCTING_TYPE$HASH,
       DRT.RESTRUCTING_TYPE_NAME RESTRUCTING_TYPE_NAME,
       DRT.RESTRUCTING_TYPE_CODE RESTRUCTING_TYPE_CODE,
       DRT.RESTRUCTING_TYPE$SOURCE RESTRUCTING_TYPE$SOURCE,
       DRT.RESTRUCTING_TYPE$PROVIDER RESTRUCTING_TYPE$PROVIDER,
       DRT.RESTRUCTING_TYPE$SOURCE_PK RESTRUCTING_TYPE$SOURCE_PK,
       DRT.RESTRUCTING_TYPE_PARENT_CD RESTRUCTING_TYPE_PARENT_CD,
       DRT.RESTRUCTING_TYPE_DESCRIPTION RESTRUCTING_TYPE_DESCRIPTION,
       RT.RESTR_TYPE,
       RT.RESTR_PRIOR
  from DWH_MAIN.DICT_RESTRUCTING_TYPE@DWH_PROD DRT,
       (select 'HARD' restr_type, 1 restr_prior from dual
          union all
        select 'SOFT' restr_type, 2 restr_prior from dual
          union all
        select 'NOT_USE' restr_type, null restr_prior from dual) rt
 where  rt.restr_type = 
              (case when DRT.restructing_type_code in ('DELAY_PAY_DHK','RESTRUCT_AUTO_DHK','REFIN_NEW_DHK') then 'HARD'
                    when DRT.restructing_type_code in ('RESTRUCT','REFIN_PROBLEM','DELAY_PAY','DELAY_PAY_PROBLEM','REFIN_STOP_CALC',
                                                     'REFIN_DISCOUNT_BSERV','RESTRUCT_WORK_DOG','REFIN_PROBLEM_WORK_D','REFIN_KARAMELKA') then 'SOFT'
                    else 'NOT_USE' end);
grant select on U1.M_DWH_DICT_RESTRUCTING_TYPE_TS to LOADDB;
grant select on U1.M_DWH_DICT_RESTRUCTING_TYPE_TS to LOADER;


