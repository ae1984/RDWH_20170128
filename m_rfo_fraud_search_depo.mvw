create materialized view U1.M_RFO_FRAUD_SEARCH_DEPO
build deferred
refresh complete on demand
as
with curs as (select *
          from u1.M_COURSES
        unpivot
          (curs_value for currency in (curs_usd,curs_eur,curs_rur,curs_gbp,curs_kgs)))
select yy.claim_id,
       yy.rfo_client_id,
       yy.rbo_client_id,
       yy.folder_date_create,
       --Остаток на всех депозитах на дату  заявки
       nvl(sum(yy.balance_all_dep_beg),0) as BALANCE_ALL_DEP_BEG,
       --Остаток на всех депозитах на начало месяца заявки
       nvl(sum(balance_all_dep_beg_m),0)  as BALANCE_ALL_DEP_BEG_M,
       --Сумма операций пополнения депозита (за исключением открытия) за 3 мес. до заявки
       nvl(sum(sum_pritok_dep_3_m),0) as SUM_PRITOK_DEP_3_M,
       --Продолжительность жизни депозита на дату заявки в днях (по действующим)
       trunc(yy.folder_date_create) - min(deposit_life_length) as DEPOSIT_LIFE_LENGTH,
       case when nvl(sum(yy.balance_all_dep_beg),0) = 0 then 0
            else nvl(sum(case when yy.currency != 'KZT' then yy.balance_all_dep_beg end),0)/sum(yy.balance_all_dep_beg)*100 end as SHARE_USD_DEP_SUM
  from (
select xx.claim_id,
       xx.rfo_client_id,
       xx.rbo_client_id,
       xx.rbo_contract_id,
       xx.date_create as folder_date_create,
       xx.currency,
       --Остаток на всех депозитах на дату  заявки
       sum(do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(fc.curs_value,1)) as BALANCE_ALL_DEP_BEG,
       --Остаток на всех депозитах на начало месяца заявки
       sum(case when do.date_doc_prov < trunc(xx.date_create,'mm')
            then do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(mc.curs_value,1) end) as BALANCE_ALL_DEP_BEG_M,
       --Сумма операций пополнения депозита (за исключением открытия) за 3 мес. до заявки
       sum(case when do.date_doc_prov < trunc(xx.date_create) and do.date_doc_prov >= trunc(xx.date_create) - 90
                 and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0  --только клиентские пополнения
                then do.amount_oper*coalesce(dc.curs_value,1) end) -
             --исключаем сумму открытия
           case when xx.begin_date < trunc(xx.date_create) and xx.begin_date >= trunc(xx.date_create) - 90
                then xx.contract_amount*coalesce(bc.curs_value,1) else 0 end as SUM_PRITOK_DEP_3_M,
       --Продолжительность жизни депозита на дату заявки в днях (по действующим)
       case when xx.is_closed = 0 then xx.begin_date end as DEPOSIT_LIFE_LENGTH
 from ( select dd.rbo_client_id, dd.rbo_contract_id, fo.rfo_client_id, fo.claim_id, fo.date_create,
               dd.contract_amount, dd.begin_date,
               case when dd.closed_date <  trunc(fo.date_create) then 1 else 0 end as is_closed,
               dd.currency
          from u1.M_FOLDER_CON_CANCEL_ONLINE_1 fo
          join u1.M_CLIENT_LINK                cl on  cl.rfo_client_id = fo.rfo_client_id
          join M_RBO_CONTRACT_DEPOSIT_BAS      dd on dd.rbo_client_id = cl.rbo_client_id
                                                 and dd.is_has_timeout = 1                     --только срочные депозиты
                                                 and dd.begin_date <= trunc(fo.date_create)   --которые открывались на дату заявки
       ) xx
  join u1.T_CONTRACT_DEPN_OPER_ALL  do on do.rbo_contract_id = xx.rbo_contract_id
  join u1.V_RBO_Z#VID_OPER_DOG vod on vod.c_code = do.oper_dog_code
  left join curs                   fc on fc.date_recount = trunc(xx.date_create)-1 --на день заявки
                                  and fc.currency = 'CURS_'||do.contract_currency     --создать отдельную mview по курсам, с нормальным кодом валют
                                  and do.contract_currency != 'KZT'
  left join curs                   mc on mc.date_recount = trunc(xx.date_create,'mm')-1 --на начало месяца
                                  and mc.currency = 'CURS_'||do.contract_currency
                                  and do.contract_currency != 'KZT'
  left join curs                   dc on dc.date_recount = do.date_doc_prov  --на дату операции
                                  and dc.currency = 'CURS_'||do.contract_currency
                                  and do.contract_currency != 'KZT'
  left join curs                   bc on bc.date_recount = xx.begin_date        --на дату начала договора
                                  and bc.currency = 'CURS_'||do.contract_currency
                                  and do.contract_currency != 'KZT'
 where do.date_doc_prov < trunc(xx.date_create)
 group by xx.claim_id,
       xx.rfo_client_id,
       xx.rbo_client_id,
       xx.rbo_contract_id,
       xx.date_create,
       xx.currency,
       xx.contract_amount,
       coalesce(bc.curs_value,1),
       xx.is_closed,
       xx.begin_date
   ) yy
 group by yy.claim_id,
       yy.rfo_client_id,
       yy.rbo_client_id,
       yy.folder_date_create;
grant select on U1.M_RFO_FRAUD_SEARCH_DEPO to LOADDB;


