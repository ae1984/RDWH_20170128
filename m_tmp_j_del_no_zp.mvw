create materialized view U1.M_TMP_J_DEL_NO_ZP
refresh force on demand
as
select c.yy_mm_start_last, -- месяц выдачи кредита или выдачи/установки револьверности по карте

    -- ПРОВЕРКА
    count(*) as con_cnt, count(distinct c.contract_id) as con_dist_cnt, -- проверка - если эти два поля равны, значит выборка верна

    -- ПРОДАЖИ
    round(sum(c.max_debt_used) / 1000000) as sales_mln, -- USE THIS! - продажи, млн
    round(sum(c.max_debt_used)) as sales, -- продажи

    round(sum(c.max_debt_used_b_w) / 1000000) as sales_b_w_mln, -- продажи по BAD и WATCH клиентам, млн
    round(sum(c.max_debt_used_b) / 1000000) as sales_b_mln, -- продажи по BAD клиентам, млн
    round(sum(c.max_debt_used_w) / 1000000) as sales_w_mln, -- продажи по WATCH клиентам, млн
    round(sum(c.max_debt_used_g) / 1000000) as sales_g_mln, -- продажи по GOOD клиентам, млн
    round(sum(c.max_debt_used_npl) / 1000000) as sales_npl_mln, -- продажи NPL, млн

    round(sum(c.max_debt_used_b_w)) as sales_b_w, -- продажи по BAD и WATCH клиентам
    round(sum(c.max_debt_used_b)) as sales_b, -- продажи по BAD клиентам
    round(sum(c.max_debt_used_w)) as sales_w, -- продажи по WATCH клиентам
    round(sum(c.max_debt_used_g)) as sales_g, -- продажи по GOOD клиентам
    round(sum(c.max_debt_used_npl)) as sales_npl, -- продажи NPL

    round(sum(c.max_debt_used_b_w) / sum(c.max_debt_used) * 100, 1) as sales_b_w_to_sales_ratio,


    -- ПРОСРОЧКА
    round(sum(c.delinq_rate_b_w * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_b_w, -- USE THIS! - просрочка всего по-новому
    round(sum(c.delinq_rate * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate, -- просрочка всего по-старому
    round(sum(c.delinq_rate_pmt_1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_1, -- USE THIS! - просрочка 1-го платежа

    round(sum(c.delinq_rate_npl * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_npl, -- USE THIS! - просрочка по NPL (>=90 days)
    round(sum(c.delinq_rate_b * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_b, -- просрочка по BAD клиентам
    round(sum(c.delinq_rate_w * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_w, -- просрочка по WATCH клиентам
    round(sum(c.delinq_rate_g * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_g, -- просрочка по GOOD клиентам

    round(sum(c.delinq_rate_pmt_2_x1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_2_x1,
    round(sum(c.delinq_rate_pmt_2_01 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_2_01,
    round(sum(c.delinq_rate_pmt_3_xx1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_3_xx1,
    round(sum(c.delinq_rate_pmt_3_001 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_3_001,
    round(sum(c.delinq_rate_pmt_4_xxx1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_4_xxx1,
    round(sum(c.delinq_rate_pmt_4_0001 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_4_0001,
    round(sum(c.delinq_rate_pmt_5_xxxx1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_5_xxxx1,
    round(sum(c.delinq_rate_pmt_5_00001 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_5_00001,
    round(sum(c.delinq_rate_pmt_6_xxxxx1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_6_xxxxx1,
    round(sum(c.delinq_rate_pmt_6_000001 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_6_000001,

    round(sum(c.delinq_rate_frd_1 * c.max_debt_used) / sum(c.max_debt_used),1) as delinq_rate_frd_1,
--    round(sum(c.delinq_rate_frd_2 * c.max_debt_used) / sum(c.max_debt_used),1) as delinq_rate_frd_2,

    round(count(case when c.delinq_rate > 0 then c.contract_number end) /
               count(c.contract_number) * 100, 1) as del_rate_by_quant,
    round(count(case when c.delinq_rate_pmt_1 > 0 then c.contract_number end) /
               count(c.contract_number) * 100, 1) as del_rate_pmt_1_by_quant,

    round(count(case when c.delinq_rate > 0 then c.contract_number end) /
               count(case when c.max_debt_used > 0 then c.contract_number end) * 100, 1) as del_rate_by_quant_w_debt,
    round(count(case when c.delinq_rate_pmt_1 > 0 then c.contract_number end) /
               count(case when c.max_debt_used > 0 then c.contract_number end) * 100, 1) as del_rate_pmt_1_by_quant_w_debt,

    -- ПРИБЫЛЬ
    round(sum(c.profit) / 1000000) as profit_mln, -- USE THIS! - прибыль, млн (доход - расход)
    round(sum(c.income) / 1000000) as income_mln, -- доход, млн (40% от продаж по GOOD клиентам)
    round(sum(c.expense) / 1000000) as expense_mln, -- расход, млн (текущая задолженность по BAD и WATCH клиентам)

    round(sum(c.profit)) as profit, -- прибыль
    round(sum(c.income)) as income, -- доход
    round(sum(c.expense)) as expense, -- расход

    round(sum(c.profit)/sum(c.max_debt_used) * 100, 1) as profit_rate, -- уровень прибыли

    -- ДОП ИНФОРМАЦИЯ
    avg(c.total_debt_last_rep_new) as total_debt_last_rep_new_avg,
    avg(c.max_debt_used) as max_debt_used_avg,
    median(c.total_debt_last_rep_new) as total_debt_last_rep_new_med,
    median(c.max_debt_used) as max_debt_used_med,
    max(c.total_debt_last_rep_new) as total_debt_last_rep_new_max,
    max(c.max_debt_used) as max_debt_used_max

from M_CONTRACT_CAL_DEL c
join V_DWH_PORTFOLIO_CURRENT dc on dc.deal_number = c.contract_number
--join V_POS p on p.pos_code = dc.dept_number and p.pos_type = 'ОТДЕЛЕНИЕ'
--join M_FOLDER_CON_MINER_X m on m.contract_id = c.contract_id
join V_FOLDER_ALL_RFO f on f.folder_id = c.folder_id_first
join V_FORM_CLIENT_ALL_RFO fc on fc.form_client_id = f.form_client_id
where (--c.yy_mm_start_last like '2011 - %' or c.yy_mm_start_last like '2012 - %' or
       c.yy_mm_start_last like '2013 - %' or c.yy_mm_start_last like '2014 - %') and
       dc.prod_type in ('ЭКСПРЕСС-КРЕДИТЫ (ТОВАРЫ)') and
       nvl(fc.inc_sal,0) = 0
group by c.yy_mm_start_last having sum(c.max_debt_used) > 0;
grant select on U1.M_TMP_J_DEL_NO_ZP to LOADDB;
grant select on U1.M_TMP_J_DEL_NO_ZP to LOADER;


