create materialized view U1.M_TMP_J_D_BEF_R_FIX_CARDS_2
refresh force on demand
as
select c.yy_mm_start_last, -- месяц выдачи кредита или выдачи/установки револьверности по карте
    -- ПРОВЕРКА
    count(*) as con_cnt, count(distinct c.contract_id) as con_dist_cnt, -- проверка - если эти два поля равны, значит выборка верна
    -- ПРОДАЖИ
    round(sum(c.max_debt_used) / 1000000) as sales_mln, -- USE THIS! - продажи, млн
    round(sum(c.max_debt_used)) as sales, -- продажи
    -- ПРОСРОЧКА
    round(sum(c.delinq_rate_b_w * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_b_w, -- USE THIS! - просрочка всего по-новому
    round(sum(c.delinq_rate * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate, -- просрочка всего по-старому
    round(sum(c.delinq_rate_pmt_1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_1, -- USE THIS! - просрочка 1-го платежа
    round(sum(c.delinq_rate_npl * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_npl -- USE THIS! - просрочка по NPL (>=90 days)
from M_CONTRACT_CAL_DEL c
where c.is_card = 2 and
     --not exists (select null from M_FOLDER_CON_CANCEL f where f.folder_id = c.folder_id_first and f.is_refin = 1) and
      (c.yy_mm_start_last like '2011 - %' or c.yy_mm_start_last like '2012 - %' or
       c.yy_mm_start_last like '2013 - %' or c.yy_mm_start_last like '2014 - %')
group by c.yy_mm_start_last having sum(c.max_debt_used) > 0;
grant select on U1.M_TMP_J_D_BEF_R_FIX_CARDS_2 to LOADDB;
grant select on U1.M_TMP_J_D_BEF_R_FIX_CARDS_2 to LOADER;


