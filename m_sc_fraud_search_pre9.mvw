create materialized view U1.M_SC_FRAUD_SEARCH_PRE9
build deferred
refresh force on demand
as
select /*+ parallel 30 */
         t.rfo_client_id
         ,count(distinct a.claim_id) as count_visit_guest
from u1.V_CLIENT_RFO_BY_ID t
left join (
    select
        d.id as claim_id
        ,c.c_date_create as date_create
        ,d.c_client_ref as rfo_client_id
    from u1.M_KASPISH_ORDERHISTORYENTRIES t
    join u1.M_KASPISH_ORDERS a on a.pk = t.p_order
    join u1.M_KASPISH_ONLINE_BUY_PROP b on b.pk = a.pk and upper(b.p_description) = upper('Loan requested')
    join u1.V_RFO_Z#KAS_ONLINE_BUY c on c.c_process_id = a.code
    join u1.V_RFO_Z#KAS_ONLINE_CLAIM d on d.c_buy_ref = c.id
    where upper(t.p_description) like '%ГОСТ%'
) a on a.rfo_client_id = t.rfo_client_id and
       a.date_create >= trunc(sysdate) - 90
group by t.rfo_client_id;
grant select on U1.M_SC_FRAUD_SEARCH_PRE9 to LOADDB;


