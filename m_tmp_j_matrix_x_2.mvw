create materialized view U1.M_TMP_J_MATRIX_X_2
refresh complete on demand
as
select td.yyyy, td.text_yyyy_mm,
       f.product_type, f.product, f.is_categ_a, f.is_client_new_by_con, f.is_credit_issued, --f.is_signing_required,
       floor(fc.age_full_years / 10) * 10 as client_age,
       fc.sex, fc.org_sector, fc.marital_status, fc.children,
/*       case when g.salary is null then 'ГЦВП NA'
            when g.salary < 2500 then  'ГЦВП ЗП = 0'
            when g.salary < 20000 then 'ГЦВП ЗП < 20К'
            when g.salary >= 20000 then 'ГЦВП ЗП > 20К' end as gcvp_salary, */
       floor(case when g.salary is null then -1
                      when g.salary < 2000 then 0
                      else g.salary end / 10000) * 10000 as gcvp_salary,
--       p.report_status as pkb_rep_status,
       fa.is_ind_enterpreneur_clear, fa.is_ind_enterpreneur,
       --f.city, --f.region,
       ---
       count(*) as cnt, count(distinct f.claim_id) as claim_cnt, count(distinct f.rfo_contract_id) as rfo_con_cnt,
       count(distinct f.rfo_con_or_claim_id) as rfo_con_or_claim_cnt, -- кол-во заявок, включая онлайн
       count(distinct f.folder_id) as fld_cnt,
       sum(f.contract_amount) / 1000000 as amount_requested_mln,
       ---
       count(b.rbo_contract_id) as contract_cnt,
       count(distinct b.rbo_contract_id) as contract_cnt_dist,

       sum(d.max_debt_used_x) / 1000000 as sales_mln,

       sum(case when d.del_days_x > 7  then d.total_debt_x end) / 1000000 as del_debt_7d_mln,
       sum(case when d.del_days_x > 30 then d.total_debt_x end) / 1000000 as del_debt_30d_mln,
       sum(case when d.del_days_x > 60 then d.total_debt_x end) / 1000000 as del_debt_60d_mln,
       sum(case when d.del_days_x > 90 then d.total_debt_x end) / 1000000 as del_debt_90d_mln,

       sum(case when d.del_days_max_x > 60 then d.total_debt_x end) / 1000000 as del_debt_30d_ever_mln,
       sum(case when d.del_days_max_x > 60 then d.total_debt_x end) / 1000000 as del_debt_60d_ever_mln,
       sum(case when d.del_days_max_x > 90 then d.total_debt_x end) / 1000000 as del_debt_90d_ever_mln,

       sum(d.total_debt_x_pmt_1_0) / 1000000 as pmt_1_0d_del_debt_mln,
       sum(d.max_debt_used_x_pmt_1_0) / 1000000 as pmt_1_0d_sales_mln,
       sum(d.total_debt_x_pmt_1_7) / 1000000 as pmt_1_7d_del_debt_mln,
       sum(d.max_debt_used_x_pmt_1_7) / 1000000 as pmt_1_7d_sales_mln,

       sum(d.total_debt_x_pmt_1_30) / 1000000 as pmt_1_30d_del_debt_mln,
       sum(d.max_debt_used_x_pmt_1_30) / 1000000 as pmt_1_30d_sales_mln,
       sum(d.total_debt_x_pmt_1_60) / 1000000 as pmt_1_60d_del_debt_mln,
       sum(d.max_debt_used_x_pmt_1_60) / 1000000 as pmt_1_60d_sales_mln,

       avg(case when g.salary >= 2000 then g.salary end) as gcvp_sal_avg,
       avg(case when fc.inc_sal > 0 then fc.inc_sal end) as form_sal_avg

from (
  select 'ОНЛАЙН-КРЕДИТ' as product_type, 'ОНЛАЙН-КРЕДИТ ЭКТ' as product, trunc(f.folder_date_create_mi) as a_date,
         case when f.is_categ_a = 1 then 'КАТЕГОРИЯ А' when f.is_categ_a = 0 then 'НЕ КАТЕГОРИЯ А' end as is_categ_a,
         --case when f.is_categ_b = 1 then 'КАТЕГОРИЯ Б' when f.is_categ_b = 0 then 'НЕ КАТЕГОРИЯ Б' end as is_categ_b,
         case when f.is_client_new_by_con = 1 then 'КЛИЕНТ НОВЫЙ' when f.is_client_new_by_con = 0 then 'КЛИЕНТ ПОВТОРНЫЙ' end as is_client_new_by_con,
         case when f.is_credit_issued = 1 then 'КРЕДИТ ВЫДАН' when f.is_credit_issued = 0 then 'КРЕДИТ НЕ ВЫДАН' end as is_credit_issued,
         f.claim_id, f.contract_number, f.rfo_client_id, f.contract_amount, f.folder_id, f.form_client_id, f.rfo_contract_id,
         f.rfo_contract_id as rfo_con_or_claim_id
  from M_FOLDER_CON_CANCEL f
  where f.process_name = 'ОНЛАЙН КРЕДИТ' and
        f.claim_id is not null --and
        --f.folder_date_create_mi >= to_date('2014-01-01','yyyy-mm-dd') --to_date('2014-12-08','yyyy-mm-dd')
  union all
  select 'ОНЛАЙН-КРЕДИТ' as product_type, 'ОНЛАЙН-КРЕДИТ ЭКТ' as product, trunc(fo.folder_date_create_mi) as a_date,
         case when fo.is_categ_a = 1 then 'КАТЕГОРИЯ А' when fo.is_categ_a = 0 then 'НЕ КАТЕГОРИЯ А' end as is_categ_a,
         --case when fo.is_categ_b = 1 then 'КАТЕГОРИЯ Б' when fo.is_categ_b = 0 then 'НЕ КАТЕГОРИЯ Б' end as is_categ_b,
         case when fo.is_client_new_by_con = 1 then 'КЛИЕНТ НОВЫЙ' when fo.is_client_new_by_con = 0 then 'КЛИЕНТ ПОВТОРНЫЙ' end as is_client_new_by_con,
         case when fo.is_credit_issued = 1 then 'КРЕДИТ ВЫДАН' when fo.is_credit_issued = 0 then 'КРЕДИТ НЕ ВЫДАН' end as is_credit_issued,
         fo.claim_id, fo.contract_number, fo.rfo_client_id, fo.contract_amount, fo.folder_id, fo.form_client_id, fo.rfo_contract_id,
         fo.claim_id as rfo_con_or_claim_id
  from M_FOLDER_CON_CANCEL_ONLINE fo
--  where fo.folder_date_create_mi >= to_date('2014-01-01','yyyy-mm-dd') --to_date('2014-12-08','yyyy-mm-dd')
  union all
  select f.product_type, f.cr_program_name as product, trunc(f.folder_date_create_mi) as a_date,
         case when f.is_categ_a = 1 then 'КАТЕГОРИЯ А' when f.is_categ_a = 0 then 'НЕ КАТЕГОРИЯ А' end as is_categ_a,
         --case when f.is_categ_b = 1 then 'КАТЕГОРИЯ Б' when f.is_categ_b = 0 then 'НЕ КАТЕГОРИЯ Б' end as is_categ_b,
         case when f.is_client_new_by_con = 1 then 'КЛИЕНТ НОВЫЙ' when f.is_client_new_by_con = 0 then 'КЛИЕНТ ПОВТОРНЫЙ' end as is_client_new_by_con,
         case when f.is_credit_issued = 1 then 'КРЕДИТ ВЫДАН' when f.is_credit_issued = 0 then 'КРЕДИТ НЕ ВЫДАН' end as is_credit_issued,
         f.claim_id, f.contract_number, f.rfo_client_id, f.contract_amount, f.folder_id, f.form_client_id, f.rfo_contract_id,
         f.rfo_contract_id as rfo_con_or_claim_id
  from M_FOLDER_CON_CANCEL f
  where f.process_name != 'ОНЛАЙН КРЕДИТ' --and
        --f.folder_date_create_mi >= to_date('2014-01-01','yyyy-mm-dd') --to_date('2014-12-08','yyyy-mm-dd')
) f
join V_TIME_DAYS td on td.yyyy_mm_dd = f.a_date
left join M_RBO_CONTRACT_BAS b on b.folder_id_first = f.folder_id and b.contract_number = f.contract_number
left join M_RBO_CONTRACT_DEL d on d.rbo_contract_id = b.rbo_contract_id
--left join M_RBO_CONTRACT_DEL_TST d on d.rbo_contract_id = b.rbo_contract_id
---
left join V_FORM_CLIENT_ALL_RFO fc on fc.form_client_id = f.form_client_id
left join V_FOLDER_ALL_RFO fa on fa.folder_id = f.folder_id
--left join V_CONTRACT_EKT_DWH e on e.rfo_contract_id = t.rfo_contract_id
--left join V_PKB_REPORT p on p.folder_id = f.folder_id
left join (select fcc.rfo_contract_id, max(v.gcvp_rep_id) as gcvp_max_id
          from V_GCVP_REPORT v
          join M_FOLDER_CON_CANCEL fcc on fcc.iin = v.client_iin and
               (v.rep_date >= trunc(fcc.folder_date_create_mi) - 60 and v.rep_date <= trunc(fcc.folder_date_create_mi))
          where v.error_code = 0
          group by fcc.rfo_contract_id
) gm on gm.rfo_contract_id = f.rfo_contract_id
left join (select v.gcvp_rep_id, max(v.salary) as salary,
                  max(v.pmts_count_from_rep) as gcvp_pmts_count_from_rep
          from V_GCVP_REPORT v
          group by v.gcvp_rep_id
) g on g.gcvp_rep_id = gm.gcvp_max_id
group by td.yyyy, td.text_yyyy_mm,
       f.product_type, f.product, f.is_categ_a, f.is_client_new_by_con, f.is_credit_issued, --f.is_signing_required,
       floor(fc.age_full_years / 10) * 10,
       fc.sex, fc.org_sector, fc.marital_status, fc.children,
/*       case when g.salary is null then 'ГЦВП NA'
            when g.salary < 2500 then  'ГЦВП ЗП = 0'
            when g.salary < 20000 then 'ГЦВП ЗП < 20К'
            when g.salary >= 20000 then 'ГЦВП ЗП > 20К' end,  */
       floor(case when g.salary is null then -1
                      when g.salary < 2000 then 0
                      else g.salary end / 10000) * 10000,
--       p.report_status,
       fa.is_ind_enterpreneur_clear, fa.is_ind_enterpreneur
       --f.city--, f.region
--);
grant select on U1.M_TMP_J_MATRIX_X_2 to LOADDB;
grant select on U1.M_TMP_J_MATRIX_X_2 to LOADER;


