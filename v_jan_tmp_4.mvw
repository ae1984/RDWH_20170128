create materialized view U1.V_JAN_TMP_4
refresh force on demand
as
select /* leading(p c) index(c V_CONTRACT_CAL_IND12) index(p V_PORTFOLIO_IND6) use_hash(p c)*/ /* parallel(30) parallel_index(30) */
--    c.yms, c.product_refin_last,
    ca.cr_scheme_name || ' - выдан? ' || f.is_credit_issued,
    count(c.contract_number) as con_cnt, --count(distinct p.contract_number) as s_con_cnt_distinct,
    round(sum(case when p.delinq_days > 0 and p.delinq_days < 8 then p.total_debt * 0.45
                   when p.delinq_days > 7 then p.total_debt
                   else 0 end) / sum(p.max_debt_used) * 100, 2) as del_rate,
    round(sum(case when p1.delinq_days > 0 and p1.delinq_days < 8 then p1.total_debt * 0.45
                   when p1.delinq_days > 7 then p1.total_debt
                   else 0 end) / sum(p.max_debt_used) * 100, 2) as del_rate_pmt_1,
    round(sum(p.max_debt_used) / 1000000) as sales_mln
from V_CONTRACT_CAL c
join V_PORTFOLIO p on c.contract_id = p.contract_id and p.report_month_all_contracts = '2013 - 12'
left join V_PORTFOLIO p1 on c.contract_id = p1.contract_id and p1.planned_pmt_month_new = 1
left join V_FOLDER_ALL_RFO f on f.folder_id = c.folder_id_first
left join V_CONTRACT_ALL_RFO ca on ca.rfo_contract_id = f.card_contract_id

where c.yms = '2013 - 10' and --c.yms like '2013 - %' and
      c.product_refin_last = 'ЛК И ПК'

--group by c.yms, c.product_refin_last
group by ca.cr_scheme_name, f.is_credit_issued

having sum(p.max_debt_used) > 0 and count(c.contract_number) = count(distinct p.contract_number)
/*) pivot (
        max(con_cnt) as con_cnt, --   min(s_contract_count_distinct) as s_contract_count_distinct,
        max(del_rate) as del_rate,
        max(del_rate_pmt_1) as del_rate_pmt_1,
        max(sales_mln) as sales_mln
    for product_refin_last in (
--        'АВТО','КН','КН-15','КНП', 'ЛКН И ПКН',
        'ЛК И ПК'--,'КК'--, 'ТК','ЗК','Н_КВ','Н_П','ЭКД' as ekd
    )
)*/;
grant select on U1.V_JAN_TMP_4 to LOADDB;
grant select on U1.V_JAN_TMP_4 to LOADER;


