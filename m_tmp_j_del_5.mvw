create materialized view U1.M_TMP_J_DEL_5
refresh force on demand
as
select cc.yy_mm_start_last,
    -- ПРОВЕРКА
    count(*) as con_cnt, count(distinct cc.contract_id) as con_dist_cnt, -- проверка - если эти два поля равны, значит выборка верна
    -- ПРОДАЖИ
    round(sum(cc.max_debt_used)/1000000) as sales_mln, -- продажи
    sum(cc.max_debt_used) as sales, -- продажи
    -- ПРОСРОЧКА
/*    count(distinct case when cc.delinq_days_max > 90 then cc.contract_number end) /
            count(distinct cc.contract_number) as del_rate_npl_old_quant,    */
    count(distinct case when n.is_del_60_plus = 1 then cc.contract_number end) /
            count(distinct cc.contract_number) as del_rate_60_plus_quant
from V_CONTRACT_CAL cc
join M_TMP_J_CON_DEL_PLUS n on n.contract_number = cc.contract_number
--where not exists (select null from M_FOLDER_CON_CANCEL f
--                  where f.folder_id = cc.folder_id_first and f.is_refin = 1)
group by cc.yy_mm_start_last
having sum(cc.max_debt_used) > 0;
grant select on U1.M_TMP_J_DEL_5 to LOADDB;
grant select on U1.M_TMP_J_DEL_5 to LOADER;


