create materialized view U1.M_TMP_J_DEL_3_KN_2
refresh force on demand
as
select --c.yy_mm_start_last,
       case when k.prev_con_kn_cnt > 3 then '>3'
            else to_char(k.prev_con_kn_cnt) end kn_prev_count,
    -- ПРОВЕРКА
    count(*) as con_cnt, count(distinct c.contract_id) as con_dist_cnt, -- проверка - если эти два поля равны, значит выборка верна
    -- ПРОДАЖИ
    round(sum(c.max_debt_used)/1000000) as sales_mln, -- продажи
    sum(c.max_debt_used) as sales, -- продажи
    -- ПРОСРОЧКА
    count(distinct case when n.is_del_60_plus = 1 then cc.contract_number end) /
            count(distinct cc.contract_number) as del_rate_60_plus_quant,
    sum(c.delinq_rate_b_w * c.max_debt_used) / sum(c.max_debt_used) /100 as del_rate_b_w, -- USE THIS! - просрочка всего по-новому --- ДЛЯ ОТЧЕТА!!!!!!!!

    count(distinct case when c.is_bad = 1 then c.contract_id end)/
                      count(distinct c.contract_id) as del_rate_b_w_by_quant, -- USE THIS! - просрочка всего по-новому --- ДЛЯ ОТЧЕТА!!!!!!!! (на будущее)

    sum(c.delinq_rate * c.max_debt_used) / sum(c.max_debt_used) / 100 as del_rate, -- просрочка всего по-старому
--    round(sum(c.delinq_rate_pmt_1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_1, -- USE THIS! - просрочка 1-го платежа
    sum(c.delinq_rate_pmt_1_45 * c.max_debt_used) / sum(c.max_debt_used) / 100 as del_rate_pmt_1_45, -- USE THIS! - просрочка 1-го платежа
    sum(c.delinq_rate_npl * c.max_debt_used) / sum(c.max_debt_used) / 100 as del_rate_npl -- USE THIS! - просрочка по NPL (>=90 days)
from V_CONTRACT_CAL cc
join M_CONTRACT_CAL_DEL c on c.contract_number = cc.contract_number
join V_DWH_PORTFOLIO_CURRENT d on d.deal_number = cc.contract_number
join M_FOLDER_CON_CANCEL f on f.folder_id = cc.folder_id_first and
                              f.contract_number = cc.contract_number
join M_TMP_J_FLD_PREV_CON_KN k on k.rfo_contract_id = f.rfo_contract_id
join M_TMP_J_CON_DEL_PLUS n on n.contract_number = cc.contract_number
where not exists (select null from M_FOLDER_CON_CANCEL f
                  where f.folder_id = c.folder_id_first and f.is_refin = 1) and
      cc.is_refin_restruct_first != 1 and
      d.prod_type in (
          'КРЕДИТ НАЛИЧНЫМИ',
          'КРЕДИТ НАЛИЧНЫМИ 15 МИНУТ',
          'КРЕДИТ НАЛИЧНЫМИ ПОВТОРНИКУ',
          'ЛУЧШИЙ КЛИЕНТ НАЛИЧНЫМИ',
          'ОСОБЕННЫЙ КЛИЕНТ - КН',
          'ОСОБЕННЫЙ КЛИЕНТ -КН 15',
          'ПОСТОЯННЫЙ КЛИЕНТ - НАЛИЧНЫЕ',
          'ЭКСПРЕСС-КРЕДИТЫ (ДЕНЬГИ)'
      ) and
      (cc.yy_mm_start_last >= '2014 - 01' or
      cc.yy_mm_start_last <= '2014 - 06')
--group by c.yy_mm_start_last, case when k.prev_con_kn_cnt > 3 then '>3'
--                                  else to_char(k.prev_con_kn_cnt) end
group by case when k.prev_con_kn_cnt > 3 then '>3'
                                  else to_char(k.prev_con_kn_cnt) end
having sum(c.max_debt_used) > 0;
grant select on U1.M_TMP_J_DEL_3_KN_2 to LOADDB;
grant select on U1.M_TMP_J_DEL_3_KN_2 to LOADER;


