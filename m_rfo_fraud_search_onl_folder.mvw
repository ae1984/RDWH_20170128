create materialized view U1.M_RFO_FRAUD_SEARCH_ONL_FOLDER
build deferred
refresh force on demand
as
select  xx.claim_id_parent                 as claim_id,
               xx.rfo_client_id                   as rfo_client_id,
               xx.date_create_parent              as date_create,
               count(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 30 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                           and xx.is_credit_rejected = 1
                          then xx.claim_id_child end)           as count_fail_online_30_d,
               nvl(min(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                        then nvl(xx.total_amount, 0) end), 0) as min_sum_online_ekt_3_m,
               nvl(avg(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                        then nvl(xx.total_amount, 0) end), 0) as avg_sum_online_ekt_3_m,
               nvl(max(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                        then nvl(xx.total_amount, 0) end), 0) as max_sum_online_ekt_3_m,

               nvl(max(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                        then xx.cnt_claim_days end), 0)           as max_count_app_onl_day,
               nvl(avg(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                        then xx.cnt_claim_days end), 0)  as avg_count_app_onl_day,
               count(distinct case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 30 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                                   then xx.rfo_shop_id end) as count_shops_on_client,
               nvl(max(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and trunc(xx.date_create_child) < trunc(xx.date_create_parent)
                        then xx.cnt_categ_days end), 0)           as count_category_3_m,

               count(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 30 and xx.date_create_child < xx.date_create_parent
                           and xx.is_credit_rejected = 1
                          then xx.claim_id_child end)           as count_fail_online_30_d_x,

               nvl(min(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and xx.date_create_child < xx.date_create_parent
                        then nvl(xx.total_amount, 0) end), 0) as min_sum_online_ekt_3_m_x,
               nvl(avg(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and xx.date_create_child < xx.date_create_parent
                        then nvl(xx.total_amount, 0) end), 0) as avg_sum_online_ekt_3_m_x,
               nvl(max(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and xx.date_create_child < xx.date_create_parent
                        then nvl(xx.total_amount, 0) end), 0) as max_sum_online_ekt_3_m_x,

               nvl(max(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and xx.date_create_child < xx.date_create_parent
                        then xx.cnt_claim_days end), 0)           as max_count_app_onl_day_x,
               nvl(avg(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and xx.date_create_child < xx.date_create_parent
                        then xx.cnt_claim_days end), 0)  as avg_count_app_onl_day_x,
               count(distinct case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 30 and xx.date_create_child < xx.date_create_parent
                                   then xx.rfo_shop_id end) as count_shops_on_client_x,
               nvl(max(case when trunc(xx.date_create_child) >= trunc(xx.date_create_parent) - 90 and xx.date_create_child < xx.date_create_parent
                        then xx.cnt_categ_days end), 0)           as count_category_3_m_x
          from (
        select t.rfo_client_id,
               t.claim_id as claim_id_parent,
               t.date_create as date_create_parent,
               tt.claim_id as claim_id_child,
               tt.date_create as date_create_child,
               count(tt.claim_id) over (partition by t.claim_id, trunc(tt.date_create)) as cnt_claim_days,
               nvl(tt.total_amount, 0) as total_amount,
               tt.rfo_shop_id,
               tt.is_credit_rejected,
               count(distinct ed.tov_categ_code)  over (partition by t.claim_id, trunc(tt.date_create)) as cnt_categ_days
          from u1.M_FOLDER_CON_CANCEL_ONLINE_1 t --какой признак считается что заявка отказная
          left join u1.M_FOLDER_CON_CANCEL_ONLINE_1 tt on tt.rfo_client_id = t.rfo_client_id
                                                      and tt.claim_id <> t.claim_id
                                                      and tt.date_create < t.date_create
          left join u1.V_CONTRACT_EKT_DWH_ONLINE    ed on ed.claim_id = tt.claim_id

               ) xx
        group by xx.claim_id_parent,
               xx.rfo_client_id,
               xx.date_create_parent;
grant select on U1.M_RFO_FRAUD_SEARCH_ONL_FOLDER to LOADDB;


