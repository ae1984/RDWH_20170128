create materialized view U1.M_APP_MINER_RBO_DEPO
build deferred
refresh force on demand
as
with curs as (select *
              from u1.M_COURSES
              unpivot
              (curs_value for currency in (curs_usd,curs_eur,curs_rur,curs_gbp,curs_kgs)))

select yy.app_id,
/*       yy.rfo_client_id,
       yy.rbo_client_id,
       yy.folder_date_create_mi,*/

       --Остаток на всех депозитах на дату  заявки
       nvl(sum(yy.balance_all_dep_beg_x),0) as balance_all_dep_beg_x,
       --Остаток на всех депозитах на начало месяца заявки
       nvl(sum(balance_all_dep_beg_m_x),0)  as balance_all_dep_beg_m_x,
       --Сумма операций пополнения депозита (за исключением открытия) за 3 мес. до заявки
       nvl(sum(sum_pritok_dep_3_m_x),0) as sum_pritok_dep_3_m_x,
       --Продолжительность жизни депозита на дату заявки в днях (по действующим)
       trunc(yy.folder_date_create_mi) - trunc(min(deposit_life_length)) as deposit_life_length,
       months_between(trunc(yy.folder_date_create_mi), trunc(min(deposit_life_length))) as deposit_life_length_mm,
       trunc(min(deposit_life_length)) as deposit_life_length_date,

       case when nvl(sum(yy.balance_all_dep_beg_x), 0) = 0 then 0
       else nvl(sum(case when yy.currency != 'KZT' then yy.balance_all_dep_beg_x end),0)/sum(yy.balance_all_dep_beg_x)*100 end as share_usd_dep_sum_x,


       -- t-1
       nvl(sum(yy.balance_all_dep_beg),0) as balance_all_dep_beg,

       nvl(sum(balance_all_dep_beg_m),0)  as balance_all_dep_beg_m,

       nvl(sum(sum_pritok_dep_3_m),0) as sum_pritok_dep_3_m,

       case when nvl(sum(yy.balance_all_dep_beg),0) = 0 then 0
       else nvl(sum(case when yy.currency != 'KZT' then yy.balance_all_dep_beg end),0)/sum(yy.balance_all_dep_beg)*100 end as share_usd_dep_sum,


      --новые параметры на t-1
       nvl(sum(yy.count_ottok_last_m),0) as count_ottok_last_m,
       nvl(sum(yy.count_ottok_last_3m),0) as count_ottok_last_3m,
       nvl(sum(yy.count_ottok_last_6m),0) as count_ottok_last_6m,
       nvl(sum(yy.count_ottok_last_12m),0) as count_ottok_last_12m,
       nvl(sum(yy.count_pritok_last_m),0) as count_pritok_last_m,
       nvl(sum(yy.count_pritok_last_3m),0) as count_pritok_last_3m,
       nvl(sum(yy.count_pritok_last_6m),0) as count_pritok_last_6m,
       nvl(sum(yy.count_pritok_last_12m),0) as count_pritok_last_12m,

       case when sum(yy.deposit_active) >= 1 then 1 else 0 end as deposit_active,
       case when sum(yy.deposit_usd_active) >= 1 then 1 else 0 end as deposit_usd_active,

       --доля валютных депозитов в общей сумме депозитов
       case when nvl(sum(yy.balance_all_dep_open), 0) = 0 then 0
            else nvl(sum(case when yy.currency != 'KZT' then yy.balance_all_dep_open end),0)/sum(yy.balance_all_dep_open)*100 end as share_usd_dep_sum_op,
       nvl(trunc(yy.folder_date_create_mi) - trunc(min(yy.deposit_life_usd)), 0) as deposit_life_usd,
        --сумма остатков на валютных депозитах
       nvl(sum(case when yy.currency != 'KZT' then yy.balance_all_dep_open end), 0) as deposit_balance_usd,
       --Средний остаток на валютных депозитах за последний месяц&&&

       --Последняя сумма пополнения валютного депозита
       nvl(max(last_pritok_sum_usd) keep (dense_rank last order by last_pritok_date), 0) as last_pritok_sum_usd,
       --Последняя сумма снятия с валютного депозита
       nvl(max(last_ottok_sum_usd) keep (dense_rank last order by last_ottok_date), 0) as last_ottok_sum_usd,
       --Кол-во дней с последнего пополнения валютного депозита
       nvl(trunc(yy.folder_date_create_mi) - trunc(max(last_pritok_date)), 0) as DAYS_FROM_LAST_PRITOK_USD,
       --Кол-во дней с последнего снятия с валютного депозита
       nvl(trunc(yy.folder_date_create_mi) - trunc(max(last_ottok_date)), 0) as DAYS_FROM_LAST_OTTOK_USD,
       nvl(sum(yy.count_ottok_all_usd),0) as count_ottok_all_usd,
       nvl(sum(yy.count_pritok_all_usd),0) as count_pritok_all_usd,
       nvl(sum(yy.count_ottok_last_m_usd),0) as count_ottok_last_m_usd,
       nvl(sum(yy.count_ottok_last_3m_usd),0) as count_ottok_last_3m_usd,
       nvl(sum(yy.count_ottok_last_6m_usd),0) as count_ottok_last_6m_usd,
       nvl(sum(yy.count_ottok_last_12m_usd),0) as count_ottok_last_12m_usd,
       nvl(sum(yy.count_pritok_last_m_usd),0) as count_pritok_last_m_usd,
       nvl(sum(yy.count_pritok_last_3m_usd),0) as count_pritok_last_3m_usd,
       nvl(sum(yy.count_pritok_last_6m_usd),0) as count_pritok_last_6m_usd,
       nvl(sum(yy.count_pritok_last_12m_usd),0) as count_pritok_last_12m_usd/*   ,

     onl.onl as IS_ONLINE,
     ofln.off as IS_OFFLINE*/
  from (
        select xx.app_id,
               xx.rfo_client_id,
               xx.rbo_client_id,
               xx.rbo_contract_id,
               xx.a_date_time as folder_date_create_mi,
               xx.currency,

               --Остаток на всех депозитах на дату  заявки
               sum(do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(fc.curs_value,1)) as balance_all_dep_beg_x,
               --Остаток на всех депозитах на начало месяца заявки
               sum(case when do.date_doc_prov < trunc(xx.a_date_time,'mm')
                    then do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(mc.curs_value,1) end) as balance_all_dep_beg_m_x,

               --Сумма операций пополнения депозита (за исключением открытия) за 3 мес. до заявки
               sum(case when do.date_doc_prov < trunc(xx.a_date_time)
                             and do.date_doc_prov >= trunc(xx.a_date_time) - 90
                             and nvl(vod.c_check_oper_depn_cli, 0) = 1
                             and do.is_dt_ct = 0  --только клиентские пополнения
                        then do.amount_oper*coalesce(dc.curs_value, 1) end) -
                     --исключаем сумму открытия
                   case when xx.begin_date < trunc(xx.a_date_time)
                             and xx.begin_date >= trunc(xx.a_date_time) - 90
                        then xx.contract_amount*coalesce(bc.curs_value, 1) else 0 end as sum_pritok_dep_3_m_x,

               --Продолжительность жизни депозита на дату заявки в днях (по действующим)
               --case when xx.is_closed = 0 then xx.begin_date end as deposit_life_length_x,

               -- t-1
               sum(case when xx.begin_date < trunc(xx.a_date_time) then do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(fc.curs_value,1) end) as balance_all_dep_beg,
               --Остаток на всех депозитах на начало месяца заявки
               sum(case when xx.begin_date < trunc(xx.a_date_time) then
                        case when do.date_doc_prov < trunc(xx.a_date_time, 'mm')
                             then do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(mc.curs_value,1) end end) as balance_all_dep_beg_m,

               --Сумма операций пополнения депозита (за исключением открытия) за 3 мес. до заявки
               sum(case when xx.begin_date < trunc(xx.a_date_time)
                             and do.date_doc_prov < trunc(xx.a_date_time)
                             and do.date_doc_prov >= trunc(xx.a_date_time) - 90
                             and nvl(vod.c_check_oper_depn_cli, 0) = 1
                             and do.is_dt_ct = 0  --только клиентские пополнения
                        then do.amount_oper*coalesce(dc.curs_value,1) end ) -
                    --исключаем сумму открытия
                   case when xx.begin_date < trunc(xx.a_date_time)
                             and xx.begin_date >= trunc(xx.a_date_time) - 90
                        then xx.contract_amount*coalesce(bc.curs_value,1) else 0 end as sum_pritok_dep_3_m,

               --Продолжительность жизни депозита на дату заявки в днях (по действующим)
               case when xx.begin_date < trunc(xx.a_date_time) then case when xx.is_closed = 0 then xx.begin_date end end as deposit_life_length,


         --новые параметры
               --количество снятий с депозитов за 30 дней до заявки
               sum(case when do.date_doc_prov >= trunc(xx.a_date_time) - 30 and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as count_ottok_last_m,
               --количество снятий с депозитов за 90 дней до заявки
               sum(case when do.date_doc_prov >= trunc(xx.a_date_time) - 90 and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as count_ottok_last_3m,
               --количество снятий с депозитов за 180 дней до заявки
               sum(case when do.date_doc_prov >= trunc(xx.a_date_time) - 180 and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as count_ottok_last_6m,
              --количество снятий с депозитов за 360 дней до заявки
               sum(case when do.date_doc_prov >= trunc(xx.a_date_time) - 360 and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as count_ottok_last_12m,

              -- количество пополнений депозитов за 30 дней до заявки
               sum(case when do.date_doc_prov >= trunc(xx.a_date_time) - 30 and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские снятия
                        then 1 end) -
                   case when xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 30 --исключаем операцию открытия
                        then 1 else 0 end
                          as count_pritok_last_m,
              -- количество пополнений депозитов за 90 дней до заявки
                sum(case when do.date_doc_prov < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 90
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские снятия
                        then 1 end) -
                   case when xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 90--исключаем операцию открытия
                        then 1 else 0 end
                          as count_pritok_last_3m,
               -- количество пополнений депозитов за 180 дней до заявки
                sum(case when do.date_doc_prov >= trunc(xx.a_date_time) - 180 and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские снятия
                        then 1 end) -
                   case when xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 180--исключаем операцию открытия
                        then 1 else 0 end
                          as count_pritok_last_6m,
               -- количество пополнений депозитов за 360 дней до заявки
                sum(case when do.date_doc_prov >= trunc(xx.a_date_time) - 360 and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские снятия
                        then 1 end) -
                   case when xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 360--исключаем операцию открытия
                        then 1 else 0 end
                          as count_pritok_last_12m,
               --  Наличие действующего валютного депозита
                case when xx.currency != 'KZT' and is_closed = 0  and xx.begin_date < trunc(xx.a_date_time)
                         then 1
                         else 0 end as  deposit_usd_active,

                --  Наличие действующего валютного депозита
                case when is_closed = 0 and xx.begin_date < trunc(xx.a_date_time) then 1 else 0 end as  deposit_active,

               --Остаток на всех депозитах на дату  заявки
               sum(case when xx.begin_date < trunc(xx.a_date_time) then do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(bc.curs_value,1) end) as BALANCE_ALL_DEP_OPEN,

           /*    --Остаток на всех валютных депозитах на дату заявки
               sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) then do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(bc.curs_value,1) end) as balance_usd_dep_open,
               */
              /* --Остаток на всех валютных депозитах на дату заявки за 30 дней до даты заявки
               sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and  do.date_doc_prov >= trunc(xx.a_date_time) - 30
                        then do.amount_oper*(case when do.is_dt_ct = 0 then 1 else -1 end)*coalesce(bc.curs_value,1) end) as balance_usd_dep_open_m,*/
              --Длительность валютного депозита
               case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) then case when xx.is_closed = 0 then xx.begin_date end end as deposit_life_usd, --возможно надо дату открытия депозита без учета пролонгаций???????????????????

              --Средний остаток на валютных депозитах за последний месяц&

              --Последняя сумма пополнения валютного депозита
              max(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 then do.amount_oper*coalesce(bc.curs_value,1) end) keep (dense_rank last order by do.date_doc_prov ) as last_pritok_sum_usd,
              max(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 then do.date_doc_prov end) as last_pritok_date,
               --Последняя сумма снятия с валютного депозита
              max(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 then do.amount_oper*coalesce(bc.curs_value,1) end) keep (dense_rank last order by do.date_doc_prov ) as last_ottok_sum_usd,
              max(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 then do.date_doc_prov end) as last_ottok_date,

              --Кол-во снятий с валютных депозитов за всё время
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as count_ottok_all_usd,
              --Кол-во пополнений валютных депозитов за всё время
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time)
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские пополнения
                        then 1 end) -
                    --исключаем операцию открытия
                   case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time)
                        then 1 else 0 end as COUNT_PRITOK_ALL_USD,
              --Кол-во снятий с валютных депозитов за последний месяц
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 30
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as COUNT_OTTOK_LAST_M_USD,
              --Кол-во снятий с валютных депозитов за последние 3 месяцев
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 90
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as COUNT_OTTOK_LAST_3M_USD,
              --Кол-во снятий с валютных депозитов за последние 6 месяцев
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 180
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as COUNT_OTTOK_LAST_6M_USD,
              --Кол-во снятий с валютных депозитов за последние 12 месяцев
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 360
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 1 --только клиентские снятия
                        then 1 end) as COUNT_OTTOK_LAST_12M_USD,
              --Кол-во пополнений валютных депозитов за последний месяц
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 30
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские пополнения
                        then 1 end) -
                    --исключаем операцию открытия
                   case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 30
                        then 1 else 0 end as COUNT_PRITOK_LAST_M_USD,
              --Кол-во пополнений валютных депозитов за последние 3 месяцев
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 90
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские пополнения
                        then 1 end) -
                    --исключаем операцию открытия
                   case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 90
                        then 1 else 0 end as COUNT_PRITOK_LAST_3M_USD,
              --Кол-во пополнений валютных депозитов за последние 6 месяцев
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 180
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские пополнения
                        then 1 end) -
                    --исключаем операцию открытия
                   case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 180
                        then 1 else 0 end as COUNT_PRITOK_LAST_6M_USD,
              --Кол-во пополнений валютных депозитов за последние 12 месяцев
              sum(case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and do.date_doc_prov >= trunc(xx.a_date_time) - 360
                         and nvl(vod.c_check_oper_depn_cli,0) = 1 and do.is_dt_ct = 0 --только клиентские пополнения
                        then 1 end) -
                    --исключаем операцию открытия
                   case when xx.currency != 'KZT' and xx.begin_date < trunc(xx.a_date_time) and xx.begin_date >= trunc(xx.a_date_time) - 360
                        then 1 else 0 end as COUNT_PRITOK_LAST_12M_USD

         from ( select dd.rbo_client_id,
                       dd.rbo_contract_id,
                       am.rfo_client_id,
                       am.app_id,
                       am.folder_date_create_mi as a_date_time,
                       dd.contract_amount,
                       dd.begin_date,
                       case when dd.closed_date < trunc(am.folder_date_create_mi) then 1 else 0 end as is_closed,
                       dd.currency
                  from u1.M_APP_MINER_BAS am
                  join u1.M_CLIENT_LINK cl on cl.rfo_client_id = am.rfo_client_id
                  join u1.M_RBO_CONTRACT_DEPOSIT_BAS dd on dd.rbo_client_id = cl.rbo_client_id
                                                           and dd.is_has_timeout = 1                     --только срочные депозиты
                                                           and dd.begin_date < am.folder_date_create_mi   --которые открывались до даты заявки
               ) xx
          join u1.T_CONTRACT_DEPN_OPER_ALL do on do.rbo_contract_id = xx.rbo_contract_id
          join u1.V_RBO_Z#VID_OPER_DOG vod on vod.c_code = do.oper_dog_code
          left join curs fc on fc.date_recount = trunc(xx.a_date_time)-1 --на день заявки
                               and fc.currency = 'CURS_'||do.contract_currency     --создать отдельную mview по курсам, с нормальным кодом валют
                               and do.contract_currency != 'KZT'

          left join curs mc on mc.date_recount = trunc(xx.a_date_time,'mm')-1 --на начало месяца
                               and mc.currency = 'CURS_'||do.contract_currency
                               and do.contract_currency != 'KZT'
          left join curs dc on dc.date_recount = do.date_doc_prov  --на дату операции
                               and dc.currency = 'CURS_'||do.contract_currency
                               and do.contract_currency != 'KZT'
          left join curs bc on bc.date_recount = xx.begin_date        --на дату начала договора
                               and bc.currency = 'CURS_'||do.contract_currency
                               and do.contract_currency != 'KZT'

          where do.date_doc_prov < trunc(xx.a_date_time)

          group by xx.app_id,
                   xx.rfo_client_id,
                   xx.rbo_client_id,
                   xx.rbo_contract_id,
                   xx.a_date_time,
                   xx.currency,
                   xx.contract_amount,
                   coalesce(bc.curs_value,1),
                   xx.is_closed,
                   xx.begin_date
   ) yy
/*   left join UPD_USER.ECO_ONL onl on onl.rfo_id =  yy.rfo_client_id
   left join UPD_USER.ECO_OFF ofln on ofln.rfo_id =  yy.rfo_client_id*/
where trunc(yy.folder_date_create_mi) >= to_date('01-01-2015','dd-mm-yyyy')
group by yy.app_id,
         yy.rfo_client_id,
         yy.rbo_client_id,
         yy.folder_date_create_mi
/*,
      onl.onl ,
      ofln.off*/;
grant select on U1.M_APP_MINER_RBO_DEPO to LOADDB;


