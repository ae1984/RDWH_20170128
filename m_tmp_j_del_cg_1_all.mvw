create materialized view U1.M_TMP_J_DEL_CG_1_ALL
refresh force on demand
as
select c.yy_mm_start_last,
    -- ПРОВЕРКА
    count(*) as con_cnt, count(distinct c.contract_id) as con_dist_cnt, -- проверка - если эти два поля равны, значит выборка верна
    -- ПРОДАЖИ
    round(sum(c.max_debt_used)) as sales, -- продажи
    -- ПРОСРОЧКА
    round(sum(c.delinq_rate_b_w * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_b_w, -- USE THIS! - просрочка всего по-новому --- ДЛЯ ОТЧЕТА!!!!!!!!
    round(count(distinct case when c.is_bad = 1 then c.contract_id end)/
                      count(distinct c.contract_id) * 100,1) as del_rate_b_w_by_quant, -- USE THIS! - просрочка всего по-новому --- ДЛЯ ОТЧЕТА!!!!!!!! (на будущее)
    round(sum(c.delinq_rate * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate, -- просрочка всего по-старому
    round(sum(c.delinq_rate_pmt_1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_1, -- USE THIS! - просрочка 1-го платежа
    round(sum(c.delinq_rate_npl * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_npl -- USE THIS! - просрочка по NPL (>=90 days)
--    round(sum(c.delinq_rate_by_amount * cc.contract_amount_max) / sum(cc.contract_amount_max),1) as del_rate_by_amount, -- просрочка всего по-старому по сумме договора
--    round(sum(c.delinq_rate_by_amount_new * cc.contract_amount_max) / sum(cc.contract_amount_max),1) as del_rate_by_amount_new -- просрочка всего по-старому по сумме договора
from M_CONTRACT_CAL_DEL c
join V_CONTRACT_CAL cc on cc.contract_number = c.contract_number
join (
     select distinct fa.folder_id
     from V_FOLDER_ALL fa
     where fa.scoring_test = 'X' /*and extract(year from fa.folder_create_date) = 2013*/ and
           fa.folder_create_date < to_date('17.10.2013','dd.mm.yyyy')
     union
/*     select distinct cc.folder_id
     from M_TMP_J_1000 cc
     join V_FOLDER_ALL_RFO f1 on f1.folder_id = cc.folder_id
     where f1.folder_date_create >= to_date('17.10.2013','dd.mm.yyyy')*/
     select distinct t3.folder_id
     from M_TMP_J_1003 t3
     join V_FOLDER_ALL_RFO f2 on f2.folder_id = t3.folder_id
     where f2.folder_date_create >= to_date('17.10.2013','dd.mm.yyyy')
) ff on ff.folder_id = c.folder_id_first
where not exists (select null from M_FOLDER_CON_CANCEL f
                  where f.folder_id = c.folder_id_first and f.is_refin = 1) and
      c.yy_mm_start_last like '2013 - %'
group by c.yy_mm_start_last
having sum(c.max_debt_used) > 0;
grant select on U1.M_TMP_J_DEL_CG_1_ALL to LOADDB;
grant select on U1.M_TMP_J_DEL_CG_1_ALL to LOADER;


