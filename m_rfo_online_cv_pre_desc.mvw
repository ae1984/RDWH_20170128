create materialized view U1.M_RFO_ONLINE_CV_PRE_DESC
build deferred
refresh force on demand
as
select trunc(sysdate) update_date,
       z.rfo_client_id client_ref,
       case when (z.is_gu_match = 0) or (z.is_gu_match = 1
                                        and (z.is_form_match = 0 or (z.is_cancel_exists = 1 and z.is_not_fraud = 0))) then 1
            else 3 end anketa_type,
       /*case when z.is_cancel_exists = 1 and z.is_credit_after_fraud = 0 and max_folder_date < to_date('17-07-2015','dd-mm-yyyy') then 'VERIFY_PHOTO'
            else '' end*/ cast(null as varchar2(20)) mng_vis_reason,

       z.is_gu_match,
       z.is_form_match,
       z.is_not_fraud,
       z.is_cancel_exists,
       z.is_purse_exists,
       z.is_credit_exists,
       z.is_credit_after_fraud
from (

  select cl_iin.rfo_client_id,
         cl_iin.is_gu_match,   -- наличие открытого ГУ или закрытого ГУ, но созданного после 01-02-2012
         cl_iin.is_form_match,  --наличие анкеты клиента не ранее 9 месяв назад
         --count(cnl.rfo_client_id) rfo_cancel_cnt,
         --count(mo_cnl.rfo_client_id) mo_cancel_cnt,
         case when (count(cnl.rfo_client_id) + count(mo_cnl.rfo_client_id)) > 0 then 1 else 0 end is_cancel_exists,
         case when max(cc.total_pmts) >= 6 then 1 else 0 end as is_not_fraud, -- ДОБАВИЛ
         cl_iin.is_purse_exists,
         cl_iin.is_credit_exists,
         (case when nvl(rfc.folder_date_create_photo,to_date('01-01-1900','dd-mm-yyyy')) >
                greatest(nvl(cnl.folder_date_create_cancel,to_date('01-01-1900','dd-mm-yyyy')),
                         nvl(mo_cnl.folder_date_create_cancel,to_date('01-01-1900','dd-mm-yyyy')))
               then 1 else 0 end) as is_credit_after_fraud
      from (select xx.rfo_client_id,
                   max(xx.is_gu_match) as is_gu_match,
                   max(xx.is_form_match) as is_form_match,
                   max(xx.is_purse_exists) as is_purse_exists,
                   max(xx.is_credit_exists) as is_credit_exists
            from ( -- по каким клиентам можем запросить ПКБ?
                  select -- определяем действующие ГУ ил ГУ стартованные с 1 фев 2012 г.
                         x.rfo_client_id,
                         max(x.is_gu_match) is_gu_match,
                         0 is_form_match,
                         0 is_purse_exists,
                         0 is_credit_exists
                  from (
                      select t.rfo_client_id,
                             t.client_iin as iin,
                             case when (t.actual_end_date is null or
                                        t.begin_date >= to_date('2012-02-01','yyyy-mm-dd'))
                                  then 1 else 0 end is_gu_match
                      from V_DWH_PORTFOLIO_CURRENT t -- карты?
                      where t.x_is_credit_issued = 1
                        and t.x_is_card = 1
                        and t.rfo_client_id > 0
                       ) x
                  group by x.rfo_client_id

                  union

                  select -- если исполнена заявка на выдачу кошелька после 1 фев 2012, то также можем запросить ПКБ
                         x.rfo_client_id,
                         max(x.is_gu_match) is_gu_match,
                         0 is_form_match,
                         1 is_purse_exists,
                         0 is_credit_exists
                  from (
                      select f.rfo_client_id,
                             case when (f.folder_date_create >= to_date('2012-02-01','yyyy-mm-dd')) then 1 else 0 end is_gu_match
                        from V_FOLDER_ALL_RFO f
                        join V_CONTRACT_ALL_RFO c on c.folder_id = f.folder_id and c.is_card = 1
                       where f.process_name = 'ВЫДАЧА КОШЕЛЬКА' and
                             f.folder_state in ('ИСПОЛНЕНО','ОТПРАВЛЕНО В ЦА','АРХИВ','ПРОВЕРКА ДОСЬЕ',
                                                'АРХИВ С ОШИБКАМИ','НА РЕКЛАМАЦИЮ')
                       ) x
                  group by x.rfo_client_id

                  union

                  select -- кредитные заявки и карты дошедшие до проверки АСОКР после 1 фев 2012
                         x.rfo_client_id,
                         max(x.is_gu_match) is_gu_match,
                         max(x.is_form_match) is_form_match,
                         0 is_purse_exists,
                         0 is_credit_exists
                  from (
                      select f.rfo_client_id,
                             0 is_gu_match,
                             case when ((cv.form_client_date is null) or (cv.form_client_date < add_months(sysdate, -9)))
                                   then 0 else 1 end is_form_match
                      from V_FOLDER_ALL_RFO f
                      join V_CONTRACT_ALL_RFO c on c.folder_id = f.folder_id
                      left join V_FORM_CLIENT_ALL_RFO cv on f.form_client_id = cv.form_client_id
                      where f.is_credit_process = 1 and
                            f.folder_state not in ('НА ОФОРМЛЕНИИ','ФОРМИРОВАНИЕ ИНФОРМАЦИИ ПО КЛИЕНТУ В БЭК-ОФИСЕ',
                                           'ОШИБКА ФОРМИРОВАНИЯ КЛИЕНТА В БЭК-ОФИСЕ','ОШИБКА СИК',
                                           'ПОВТОРНОЕ ФОТОГРАФИРОВАНИЕ','ОШИБКА ПРИ ПРОВЕРКЕ','ВВОД КОДА',
                                           'ФОРМИРОВАНИЕ ДОГОВОРА В БЭК-ОФИСЕ','ПРОСРОЧЕННАЯ','ОТКАЗАНО')
                      ) x
                  group by x.rfo_client_id

                  union

                  select --добавляем признак наличия выданных когда-либо кредитов
                         f.rfo_client_id,
                         0 is_gu_match,
                         0 is_form_match,
                         0 is_purse_exists,
                         1 is_credit_exists
                    from V_FOLDER_ALL_RFO f
                    join V_CONTRACT_ALL_RFO c on c.folder_id = f.folder_id
                   where f.is_credit_process = 1
                     and f.is_credit_issued = 1
                  group by f.rfo_client_id
            ) xx
            group by xx.rfo_client_id

          ) cl_iin
    left join V_CLIENT_RFO_BY_ID xcl on xcl.rfo_client_id = cl_iin.rfo_client_id
    left join V_CLIENT_CAL cc on (cc.client_iin_last = xcl.iin or cc.client_rnn_last = xcl.rnn) -- ДОБАВИЛ
    left join (select cx.rfo_client_id, max(f.folder_date_create) as folder_date_create_cancel
               from V_CANCEL cx
               join V_FOLDER_ALL_RFO f on f.folder_id = cx.folder_id
               where cx.cancel_level = 1
                 and cx.cancel_type_code in ( 'VERIFICATION_CONTACT',
                                              'VERIFICATION_RATING',
                                              'VERIFICATION_PHOTO',
                                              'НЕАДЕКВАТНЫЙ',
                                              'ЛОЖНАЯ ИНФОРМАЦИЯ',
                                              'НЕ УСТРАИВАЕТ ФОТО',
                                              'НЕ ТРЕЗВЫЙ',
                                              'ДОК.НЕ СООТВЕТСВУЮТ',
                                              '1480',
                                              '1420',
                                              '1430',
                                              '1440',
                                              '1450',
                                              '1090',
                                              '1010',
                                              '1040',
                                              '1050',
                                              '1030',
                                              '1390',
                                              '1400',
                                              '1340',
                                              '1350',
                                              '1380',
                                              '1370',
                                              '1360',
                                              '1300',
                                              '1410')
                 group by cx.rfo_client_id
               ) cnl on cnl.rfo_client_id = cl_iin.rfo_client_id

    left join (select cx.rfo_client_id, max(f.folder_date_create) as folder_date_create_cancel
               from V_CANCEL cx
               join V_FOLDER_ALL_RFO f on f.folder_id = cx.folder_id
               where cx.cancel_type_group = 'MO-MO_SCO_REJECT'
                 and cx.cancel_type_code in (
                              select par_code from (
                                select x.*, case when (par_name like '%СКОРКАРТА%' or par_name like '%КДН%' or
                                                       par_name like '%AR1%' or par_name like '%ПРОВЕРКА ПО ЧС КЛИЕНТОВ%' or
                                                       par_name like '% J1%' or par_name like '%РИСКОВЫЕ ОРГАНИЗАЦИИ%' or
                                                       par_name like 'ПРОВЕРКА ПО ЧС УТЕРЯННЫХ ДОКУМЕНТОВ'
                                                       ) and
                                                      (par_name not like '%FRAUD%')
                                                       then 0 else 1 end as is_antifraud
                                from (
                                  select distinct dp.code_int as par_code, dp.name as par_name from V_MO_D_PAR dp
                                    join V_MO_D_CALC_PAR cp on cp.d_par_code = dp.code_int and cp.is_out = 1
                                    join V_MO_D_CALC dc on dc.code = cp.d_calc_code and
                                          (dc.d_calc_group_code like 'SC_%' or dc.d_calc_group_code in ('AR1_EKT','AR1_KN','AR1_KN15_LKN_PKN','AR1_KNP'))
                                    where dp.code_int like '%_RES_PRE%' or
                                          dp.code_int in ('CLIENT_BL_EXISTS_SCO', 'CLIENT_DOC_BL_EXISTS',
                                                          'RISK_AUTO_AMOUNT_BEKI_GCVP', 'SC_RISK_EKT_UNMARRIED_BEKI_LOW_SAL',
                                                          'SC_RISK_KN_KDN_HIGH_INCOME', 'SC_RISK_KN_KDN_LOW_INCOME',
                                                          'SC_AR1_KN15_LKN_PKN','SC_AR1_EKT','SC_AR1_KN','SC_AR1_KNP',
                                                          'SC_2_KN_RULES_SET_J1','SC_22_ANTIFRAUD_201405','SC_8_ANTIFRAUD_201405',
                                                          'SC_17_ANTIFRAUD_201406','SC_CHECK_MAN_REJ', 'SC_AUTO_GAI_NO_GCVP'
                                                         )

                                  ) x
                              ) y where is_antifraud = 1 )
                 group by cx.rfo_client_id
               ) mo_cnl on mo_cnl.rfo_client_id = cl_iin.rfo_client_id
    left join (select fa.rfo_client_id, max(fa.folder_date_create) as folder_date_create_photo
                 from V_FOLDER_ALL_RFO fa
                 join V_CONTRACT_ALL_RFO ca on ca.folder_id = fa.folder_id
                 join V_VERIFICATION v on v.folder_id = ca.folder_id
                where ca.is_card = 0
                  and ca.is_credit_issued = 1
                  and v.verif_doc_status = 'ПОДТВЕРЖДЕН'
                  and v.verif_photo_result = 'ОДОБРЕНИЕ'
                group by fa.rfo_client_id) rfc on rfc.rfo_client_id = cl_iin.rfo_client_id
    group by cl_iin.rfo_client_id,
             cl_iin.is_gu_match,
             cl_iin.is_form_match,
             cl_iin.is_purse_exists,
             cl_iin.is_credit_exists,
             cnl.folder_date_create_cancel,
             mo_cnl.folder_date_create_cancel,
             rfc.folder_date_create_photo
) z;
grant select on U1.M_RFO_ONLINE_CV_PRE_DESC to LOADDB;
grant select on U1.M_RFO_ONLINE_CV_PRE_DESC to LOADER;


