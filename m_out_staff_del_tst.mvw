create materialized view U1.M_OUT_STAFF_DEL_TST
build deferred
refresh complete on demand
as
select x.department, x.position, x.name, x.iin,   -- подразделение, должность, ФИО, ИИН сотрудника
       count(*) as cnt,
       count(distinct contract_number) as con_cnt,-- количество договоров
       max(delinq_days) as delinq_days,           -- максимальное количество дней просрочки
       sum(delinq_amount) as delinq_amount,       -- сумма просрочки
       sum(total_debt) as total_debt,             -- общая задолженность
       max(product) keep (dense_rank last order by total_debt) as product,        -- тип продукта по договору, имеющему максимальную задолженность
       min(begin_date) keep (dense_rank last order by total_debt) as begin_date,  -- дата начала по договору, имеющему максимальную задолженность
       sum(amount) as amount,                     -- сумма договора
       sum(pmt) as pmt,                           -- ежемесячный платеж,

       max(delinq_days_old) as delinq_days_old          -- максимальное количество дней просрочки
from (
    select trim(upper(s.direct_name||' '||s.depart_name||' '||s.office_name||' '||s.divis_name)) as department,
           trim(upper(s.position_name)) as position,
           c.client_name as name,
           c.client_iin as iin,
           c.deal_number as contract_number,
           c.x_delinq_days as delinq_days,
           c.x_delinq_amount as delinq_amount,
           c.x_total_debt as total_debt,
           c.prod_type as product,
           c.begin_date,
           c.x_amount as amount,
           c.pmt,
           c.delinq_days_old as delinq_days_old
    from u1.M_ZUP_1C_STAFF s
    join u1.V_DWH_PORTFOLIO_CURRENT c on c.client_iin = s.tax_id
    where s.firing_date_txt is null and
          c.x_is_credit_issued = 1 and c.is_credit_active = 1 and
          c.x_delinq_days > 0
) x
group by x.department, x.position, x.name, x.iin;
grant select on U1.M_OUT_STAFF_DEL_TST to LOADDB;
grant select on U1.M_OUT_STAFF_DEL_TST to LOADER;


