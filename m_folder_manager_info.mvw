create materialized view U1.M_FOLDER_MANAGER_INFO
refresh complete on demand
as
select x.folder_id,
       x.rfo_client_id,
       x.folder_date_create,
       x.expert_login,
       x.expert_name,
       x.pos_code,
       x.fol_manag_day,
       x.minute_client,
       x.folder_prev_min,
       x.folder_to_asocr_min,
       x.kol_fol_1d,
       x.kol_fol_3d,
       x.kol_fol_7d ,
       x.kol_fol_1m,
       x.kol_fol_3m ,
       case when (x.fol_time < to_date('09:00:00','hh24:mi:ss') and
                  x.fol_time > to_date('18:00:00','hh24:mi:ss')) or
                  (x.fol_time > to_date('13:00:00','hh24:mi:ss') and
                  x.fol_time < to_date('14:00:00','hh24:mi:ss')) or
                  x.day_weekends is not null
             then 0 else 1 end as folder_in_working_hours,
      x.is_holiday,
      case when cnt10_all = 10 then round(cnt10_issued/cnt10_all,2) end as manager10_issue_grade,
      case when cnt20_all = 20 then round(cnt20_issued/cnt20_all,2) end as manager20_issue_grade,
      case when cnt50_all = 50 then round(cnt50_issued/cnt50_all,2) end as manager50_issue_grade--,
      ,pos_fol.count_pos_change
     from (
      select v1.folder_id , v1.rfo_client_id, v1.folder_date_create,v1.expert_login,v1.expert_name,v1.pos_code, --,fc.rfo_contract_id,
              count(v1.folder_id) over(partition by v1.rfo_client_id ,v1.expert_login,trunc(v1.folder_date_create)) fol_manag_day,
              round((sum(v1.manager_input_time) over (partition by v1.rfo_client_id,trunc(v1.folder_date_create)))/60) as minute_client , -- общее время обслуживаня клиента
              round(24*60*((v1.folder_date_create - lag(v1.folder_date_create,1,v1.folder_date_create)
                       over (partition by v1.rfo_client_id,trunc(v1.folder_date_create) order by v1.folder_date_create))))  as folder_prev_min ,--количество минут до предыдущей заявки в течение этого дня
              round(v1.manager_input_time/60)  as folder_to_asocr_min, --    Время от создания заявки до отправки на АСОКР (в минутах)
              count(v1.folder_id) over(partition by v1.rfo_client_id order by trunc(v1.folder_date_create) range between interval '1' DAY preceding and current row) kol_fol_1d,
              count(v1.folder_id) over(partition by v1.rfo_client_id order by trunc(v1.folder_date_create) range between interval '3' DAY preceding and current row) kol_fol_3d,
              count(v1.folder_id) over(partition by v1.rfo_client_id order by trunc(v1.folder_date_create) range between interval '7' DAY preceding and current row) kol_fol_7d,
              count(v1.folder_id) over(partition by v1.rfo_client_id order by trunc(v1.folder_date_create) range between interval '1' MONTH preceding and current row) kol_fol_1m,
              count(v1.folder_id) over(partition by v1.rfo_client_id order by trunc(v1.folder_date_create) range between interval '3' MONTH preceding and current row) kol_fol_3m,
              to_date(to_char(v1.folder_date_create,'hh24:mi:ss'),'hh24:mi:ss') as fol_time,
              cc.value day_weekends,
              case when cc.value is not null then 1 else 0 end as is_holiday,
               count(v1.folder_id) over (partition by v1.expert_login order by v1.folder_date_create rows between 10 preceding and 1 preceding)   cnt10_all ,
               count(case when v1.is_credit_issued = 1 then v1.folder_id end ) over (partition by v1.expert_login order by v1.folder_date_create rows between 10 preceding and 1 preceding)   cnt10_issued,
               count(v1.folder_id) over (partition by v1.expert_login order by v1.folder_date_create rows between 20 preceding and 1 preceding)   cnt20_all ,
               count(case when v1.is_credit_issued = 1 then v1.folder_id end ) over (partition by v1.expert_login order by v1.folder_date_create rows between 20 preceding and 1 preceding)   cnt20_issued,
               count(v1.folder_id) over (partition by v1.expert_login order by v1.folder_date_create rows between 50 preceding and 1 preceding)   cnt50_all ,
               count(case when v1.is_credit_issued = 1 then v1.folder_id end ) over (partition by v1.expert_login order by v1.folder_date_create rows between 50 preceding and 1 preceding)   cnt50_issued
           from V_FOLDER_ALL_RFO v1
           left join (select distinct value from  M_RBO_CALENDAR_VALUE where calendar_name in ('HOLIDAYS','HOLIDAYS_W') ) cc on cc.value = trunc(v1.folder_date_create)
        where v1.is_credit_process = 1  --только по кредитным процессам
      ) x
     left join (select folder_id,
                 (sum(is_pos_change) over (partition by expert_login order by folder_date_create range between interval '1' MONTH preceding and current row))  as count_pos_change
                from
                (
                select v1.folder_id,expert_login,folder_date_create,pos_code,
                      -- lag(pos_code) over (partition by  v1.expert_login order by folder_date_create ) as pos_code_prev,
                       case when pos_code != nvl(lag(pos_code,1,pos_code) over (partition by  v1.expert_login order by folder_date_create ),0) then 1 else 0 end as is_pos_change
                 from V_FOLDER_ALL_RFO v1
                 where v1.is_credit_process = 1
                  )
 )   pos_fol on pos_fol.folder_id = x.folder_id;
grant select on U1.M_FOLDER_MANAGER_INFO to LOADDB;
grant select on U1.M_FOLDER_MANAGER_INFO to LOADER;


