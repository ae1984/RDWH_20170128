create materialized view U1.M_TMP_JAN_GOOD_CLI_1
refresh force on demand
as
select c.yy_mm_start_last,
       --f2.del_days_any_max_bef_4y,
    -- ПРОВЕРКА
    count(*) as con_cnt, count(distinct c.contract_id) as con_dist_cnt, -- проверка - если эти два поля равны, значит выборка верна
    -- ПРОДАЖИ
    round(sum(c.max_debt_used) / 1000000) as sales_mln, -- USE THIS! - продажи, млн
    round(sum(c.max_debt_used)) as sales, -- продажи
    round(sum(c.max_debt_used_b_w)) as sales_b_w,
    round(sum(c.max_debt_used_g)) as sales_g,
    -- ПРОСРОЧКА
    round(sum(c.delinq_rate_b_w * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_b_w, -- USE THIS! - просрочка всего по-новому
    round(sum(c.delinq_rate * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate, -- просрочка всего по-старому
    round(sum(c.delinq_rate_pmt_1 * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_pmt_1, -- USE THIS! - просрочка 1-го платежа
    round(sum(c.delinq_rate_npl * c.max_debt_used) / sum(c.max_debt_used),1) as del_rate_npl -- USE THIS! - просрочка по NPL (>=90 days)

from M_CONTRACT_CAL_DEL c
join M_FOLDER_CON_CANCEL fc on fc.folder_id = c.folder_id_first and
                               fc.contract_number = c.contract_number
join M_TMP_J_FLD_START_TMP_2 f2 on f2.rfo_contract_id = fc.rfo_contract_id
where (c.yy_mm_start_last like '2013%' or /*c.yy_mm_start_last in (
               '2014 - 01','2014 - 02','2014 - 03','2014 - 04','2014 - 05')*/ c.yy_mm_start_last like '2014%') and
      not exists (select null from M_FOLDER_CON_CANCEL f where f.folder_id = c.folder_id_first and f.is_refin = 1) and ---- не РР
      f2.good_active_mon_debt10k_bef_4y >= 5 and
      --f2.inactive_period_4y > 0 and f2.inactive_period_4y < 14 and
      f2.del_days_debt10k_max_bef_4y = 0 --and
--      f2.amount_max_bef_4y * 2 >= fc.contract_amount
group by c.yy_mm_start_last having sum(c.max_debt_used) > 0;
grant select on U1.M_TMP_JAN_GOOD_CLI_1 to LOADDB;
grant select on U1.M_TMP_JAN_GOOD_CLI_1 to LOADER;


