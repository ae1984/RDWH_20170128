create materialized view U1.M_AUTO_KOLESA_KZ_DATA_T2
build deferred
refresh force on demand
as
select t1.akk_sub_id,
       t1.akk_data_id,
       t1.akk_id,
       t1.akk_active_bool,
       t1.akk_brend,
       t1.akk_model,
       t1.akk_year_car,
       t1.akk_drive,
       t1.akk_engine_volume,
       t1.akk_kpp_type,
       t1.akk_body_type,
       t1.akk_price,
       t1.avg_price,

 (case
   when t1.count_price_confidence + (case
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          when ((t1.avg_price / t3.avg_price - 1) is null) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
           when ((t1.avg_price / t3.avg_price - 1) is null) and
                ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          else
           0
        end) + (case
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) >= 0 then
           1
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) is null then
           1
          else
           0
        end) = 3 then
    1
   when (case
          when t1.advert_cnt > 50 then
           1
          else
           0
        end) = 1 then
    1
   when t1.count_price_confidence = 1 and (case
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          when ((t1.avg_price / t3.avg_price - 1) is null) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
          when ((t1.avg_price / t3.avg_price - 1) is null) and
               ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          else
           0
        end) = 1 and (case
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) >= 0 then
           1
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) is null then
           1
          else
           0
        end) = 0 and ABS((case
                           when t1.akk_kpp_type = 'АКПП' then
                            (t1.avg_price / t4.avg_price - 1)
                           when t1.akk_kpp_type = 'МКПП' then
                            (t4.avg_price / t1.avg_price - 1)
                         end)) <= 0.02 then
    1
   when t1.count_price_confidence = 1 and (case
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          when ((t1.avg_price / t3.avg_price - 1) is null) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
           when ((t1.avg_price / t3.avg_price - 1) is null) and
                ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          else
           0
        end) = 0 and (case
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) >= 0 then
           1
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) is null then
           1
          else
           0
        end) = 1 and
        abs(t1.avg_price / t2.avg_price - 1) <= 0.02 and
        ((t1.avg_price  / t3.avg_price - 1) is null or
        (t1.avg_price / t3.avg_price - 1) >= 0) then
    1
   when t1.count_price_confidence = 1 and (case
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
          when ((t1.avg_price / t3.avg_price - 1) >= 0) and
               ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          when ((t1.avg_price / t3.avg_price - 1) is null) and
               ((t1.avg_price / t2.avg_price - 1) <= 0) then
           1
          when ((t1.avg_price / t3.avg_price - 1) is null) and
               ((t1.avg_price / t2.avg_price - 1) is null) then
           1
          else
           0
        end) = 0 and (case
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) >= 0 then
           1
          when (case
                 when t1.akk_kpp_type = 'АКПП' then
                  (t1.avg_price / t4.avg_price - 1)
                 when t1.akk_kpp_type = 'МКПП' then
                  (t4.avg_price / t1.avg_price - 1)
               end) is null then
           1
          else
           0
        end) = 1 and
        abs(t1.avg_price  / t3.avg_price - 1) <= 0.02 and
        ((t1.avg_price  / t2.avg_price - 1) is null or
        (t1.avg_price / t2.avg_price - 1) >= 0) then
    1
   else
    0
 end) as confidence_level,
 (case
   when cor.percent is null then
    (case
      when t1.akk_year_car between 2001 and 2013 then
       -0.25
      when t1.akk_year_car = 2014 then
       -0.20
      when t1.akk_year_car = 2015 then
       -0.15
    end)
   else
    cor.percent
 end) as PRICE_CORRECTION
  from M_AUTO_KOLESA_KZ_DATA_SUB_T t1
       left  join M_AUTO_KOLESA_KZ_DATA_T1 t2 on t2.akk_sub_id = t1.akk_sub_id
                                             and t1.akk_kpp_type = t2.akk_kpp_type
                                             and t1.akk_year_car = t2.akk_year_car - 1
                                             and t1.count_price_confidence = 1
                                             and t2.count_price_confidence = 1
       left  join M_AUTO_KOLESA_KZ_DATA_T1 t3 on t1.akk_sub_id = t3.akk_sub_id
                                             and t1.akk_kpp_type = t3.akk_kpp_type
                                             and t1.akk_year_car = t3.akk_year_car + 1
                                             and t1.count_price_confidence = 1
                                             and t3.count_price_confidence = 1
       left  join M_AUTO_KOLESA_KZ_DATA_T1 t4 on t1.akk_sub_id = t4.akk_sub_id
                                             and t1.akk_kpp_type != t4.akk_kpp_type
                                             and t1.akk_year_car = t4.akk_year_car
                                             and t1.count_price_confidence = 1
                                             and t4.count_price_confidence = 1
       left join u1.T_AUTO_PRICE_CORRECTION cor on t1.akk_brend = cor.brend
                                               and t1.akk_model = cor.model
                                               and t1.akk_year_car = cor.year_car;
grant select on U1.M_AUTO_KOLESA_KZ_DATA_T2 to LOADDB;


