create materialized view U1.M_PKB_REPORT_MOBILE_PHONES_TMP
refresh force on demand
as
select /*+ parallel 20 */
       tab2.id,
       tab2.phone_numb,
          case when regexp_like(phone_numb_1, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_1,'^[7-8]{2}','')
               when regexp_like(phone_numb_1, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_1,'^[7-8]{1}','')
           --    when regexp_like(phone_numb_1, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_1,'^[+]7','')
               else to_char(phone_numb_1)
          end as phone_numb_clear_1,
          case when regexp_like(phone_numb_2, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_2,'^[7-8]{2}','')
               when regexp_like(phone_numb_2, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_2,'^[7-8]{1}','')
           --    when regexp_like(phone_numb_2, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_2,'^[+]7','')
               else to_char(phone_numb_2)
          end as phone_numb_clear_2,
          case when regexp_like(phone_numb_3, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_3,'^[7-8]{2}','')
               when regexp_like(phone_numb_3, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_3,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_3, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_3,'^[+]7','')
               else to_char(phone_numb_3)
          end as phone_numb_clear_3,
          case when regexp_like(phone_numb_4, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_4,'^[7-8]{2}','')
               when regexp_like(phone_numb_4, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_4,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_4, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_4,'^[+]7','')
               else to_char(phone_numb_4)
          end as phone_numb_clear_4,
          case when regexp_like(phone_numb_5, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_5,'^[7-8]{2}','')
               when regexp_like(phone_numb_5, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_5,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_5, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_5,'^[+]7','')
               else to_char(phone_numb_5)
          end as phone_numb_clear_5,
          case when regexp_like(phone_numb_6, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_6,'^[7-8]{2}','')
               when regexp_like(phone_numb_6, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_6,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_6, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_6,'^[+]7','')
               else to_char(phone_numb_6)
          end as phone_numb_clear_6,
          case when regexp_like(phone_numb_7, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_7,'^[7-8]{2}','')
               when regexp_like(phone_numb_7, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_7,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_7, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_7,'^[+]7','')
               else to_char(phone_numb_7)
          end as phone_numb_clear_7,
          case when regexp_like(phone_numb_8, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_8,'^[7-8]{2}','')
               when regexp_like(phone_numb_8, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_8,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_8, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_8,'^[+]7','')
               else to_char(phone_numb_8)
          end as phone_numb_clear_8,
          case when regexp_like(phone_numb_9, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_9,'^[7-8]{2}','')
               when regexp_like(phone_numb_9, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_9,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_9, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_9,'^[+]7','')
               else to_char(phone_numb_9)
          end as phone_numb_clear_9,
          case when regexp_like(phone_numb_10, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_10,'^[7-8]{2}','')
               when regexp_like(phone_numb_10, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_10,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_10, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_10,'^[+]7','')
               else to_char(phone_numb_10)
          end as phone_numb_clear_10,
          case when regexp_like(phone_numb_11, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_11,'^[7-8]{2}','')
               when regexp_like(phone_numb_11, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_11,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_11, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_11,'^[+]7','')
               else to_char(phone_numb_11)
          end as phone_numb_clear_11,
          case when regexp_like(phone_numb_12, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_12,'^[7-8]{2}','')
               when regexp_like(phone_numb_12, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_12,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_12, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_12,'^[+]7','')
               else to_char(phone_numb_12)
          end as phone_numb_clear_12,
          case when regexp_like(phone_numb_13, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_13,'^[7-8]{2}','')
               when regexp_like(phone_numb_13, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_13,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_13, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_13,'^[+]7','')
               else to_char(phone_numb_13)
          end as phone_numb_clear_13,
          case when regexp_like(phone_numb_14, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_14,'^[7-8]{2}','')
               when regexp_like(phone_numb_14, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_14,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_14, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_14,'^[+]7','')
               else to_char(phone_numb_14)
          end as phone_numb_clear_14,
          case when regexp_like(phone_numb_15, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_15,'^[7-8]{2}','')
               when regexp_like(phone_numb_15, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_15,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_15, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_15,'^[+]7','')
               else to_char(phone_numb_15)
          end as phone_numb_clear_15,
          case when regexp_like(phone_numb_16, '^[7-8]{2}[[:digit:]]{10}$') then  regexp_replace(phone_numb_16,'^[7-8]{2}','')
               when regexp_like(phone_numb_16, '^[7-8]{1}[[:digit:]]{10}$') then  regexp_replace(phone_numb_16,'^[7-8]{1}','')
          --     when regexp_like(phone_numb_16, '^[+]7[[:digit:]]{10}$') then regexp_replace(phone_numb_16,'^[+]7','')
               else to_char(phone_numb_16)
          end as phone_numb_clear_16
  from (select /*+ parallel 20 */
               tab.id,
               tab.phone_numb,
               substr(tab.phone_numb, 1, instr(tab.phone_numb,';',1)-1) as phone_numb_1,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,1 )+1, instr(tab.phone_numb,';',1,2 ) - instr(tab.phone_numb,';',1,1)-1 ) as phone_numb_2,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,2 )+1, instr(tab.phone_numb,';',1,3 ) - instr(tab.phone_numb,';',1,2)-1 ) as phone_numb_3,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,3 )+1, instr(tab.phone_numb,';',1,4 ) - instr(tab.phone_numb,';',1,3)-1 ) as phone_numb_4,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,4 )+1, instr(tab.phone_numb,';',1,5 ) - instr(tab.phone_numb,';',1,4)-1 ) as phone_numb_5,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,5 )+1, instr(tab.phone_numb,';',1,6 ) - instr(tab.phone_numb,';',1,5)-1 ) as phone_numb_6,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,6 )+1, instr(tab.phone_numb,';',1,7 ) - instr(tab.phone_numb,';',1,6)-1 ) as phone_numb_7,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,7 )+1, instr(tab.phone_numb,';',1,8 ) - instr(tab.phone_numb,';',1,7)-1 ) as phone_numb_8,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,8 )+1, instr(tab.phone_numb,';',1,9 ) - instr(tab.phone_numb,';',1,8)-1 ) as phone_numb_9,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,9 )+1, instr(tab.phone_numb,';',1,10) - instr(tab.phone_numb,';',1,9)-1 ) as phone_numb_10,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,10)+1, instr(tab.phone_numb,';',1,11) - instr(tab.phone_numb,';',1,10)-1) as phone_numb_11,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,11)+1, instr(tab.phone_numb,';',1,12) - instr(tab.phone_numb,';',1,11)-1) as phone_numb_12,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,12)+1, instr(tab.phone_numb,';',1,13) - instr(tab.phone_numb,';',1,12)-1) as phone_numb_13,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,13)+1, instr(tab.phone_numb,';',1,14) - instr(tab.phone_numb,';',1,13)-1) as phone_numb_14,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,14)+1, instr(tab.phone_numb,';',1,15) - instr(tab.phone_numb,';',1,14)-1) as phone_numb_15,
               substr(tab.phone_numb, instr(tab.phone_numb,';',1,15)+1, instr(tab.phone_numb,';',1,16) - instr(tab.phone_numb,';',1,15)-1) as phone_numb_16
          from V_RFO_Z#PKB_REPORT_TMP tab) tab2;
grant select on U1.M_PKB_REPORT_MOBILE_PHONES_TMP to LOADDB;
grant select on U1.M_PKB_REPORT_MOBILE_PHONES_TMP to LOADER;


